//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleTracking.Reports
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SampleTrackingEntities : DbContext
    {
        public SampleTrackingEntities()
            : base("name=SampleTrackingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<IST_AliquotLocation> IST_AliquotLocation { get; set; }
        public DbSet<IST_ApplicationRole> IST_ApplicationRole { get; set; }
        public DbSet<IST_ApplicationUserRole> IST_ApplicationUserRole { get; set; }
        public DbSet<IST_Drawer> IST_Drawer { get; set; }
        public DbSet<IST_DrawerSlot> IST_DrawerSlot { get; set; }
        public DbSet<IST_Exception> IST_Exception { get; set; }
        public DbSet<IST_ExceptionType> IST_ExceptionType { get; set; }
        public DbSet<IST_Freezer> IST_Freezer { get; set; }
        public DbSet<IST_SampleAliquot> IST_SampleAliquot { get; set; }
        public DbSet<IST_Session> IST_Session { get; set; }
        public DbSet<ist_SessionType> ist_SessionType { get; set; }
        public DbSet<IST_Status> IST_Status { get; set; }
        public DbSet<IST_Subtype> IST_Subtype { get; set; }
        public DbSet<IST_Tray> IST_Tray { get; set; }
        public DbSet<IST_TrayLocation> IST_TrayLocation { get; set; }
        public DbSet<IST_TrayMap> IST_TrayMap { get; set; }
        public DbSet<IST_TrayType> IST_TrayType { get; set; }
        public DbSet<IST_User> IST_User { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<IST_Arch_AliquotLocation> IST_Arch_AliquotLocation { get; set; }
        public DbSet<IST_Arch_User> IST_Arch_User { get; set; }
        public DbSet<IST_ScanDetails> IST_ScanDetails { get; set; }
        public DbSet<IST_Scans> IST_Scans { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<IST_ActiveAL_vw> IST_ActiveAL_vw { get; set; }
        public DbSet<IST_AliquotLocation_vw> IST_AliquotLocation_vw { get; set; }
        public DbSet<ist_drawer_vw> ist_drawer_vw { get; set; }
        public DbSet<ist_drawerSlot_vw> ist_drawerSlot_vw { get; set; }
        public DbSet<IST_Freezer_VW> IST_Freezer_VW { get; set; }
        public DbSet<IST_FreezerLocation_vw> IST_FreezerLocation_vw { get; set; }
        public DbSet<IST_OpenSessionSampleAliquot_vw> IST_OpenSessionSampleAliquot_vw { get; set; }
        public DbSet<IST_OpenSessionTray_vw> IST_OpenSessionTray_vw { get; set; }
        public DbSet<IST_SessionAL_vw> IST_SessionAL_vw { get; set; }
        public DbSet<IST_SessionMissingSA_vw> IST_SessionMissingSA_vw { get; set; }
        public DbSet<IST_SessionOrphan_vw> IST_SessionOrphan_vw { get; set; }
        public DbSet<IST_SessionRelocate_vw> IST_SessionRelocate_vw { get; set; }
        public DbSet<IST_SessionSA_vw> IST_SessionSA_vw { get; set; }
        public DbSet<IST_SessionSampleAliquot_vw> IST_SessionSampleAliquot_vw { get; set; }
        public DbSet<IST_SessionUnknownSA_vw> IST_SessionUnknownSA_vw { get; set; }
        public DbSet<IST_tray_map_vw> IST_tray_map_vw { get; set; }
        public DbSet<IST_TrayLocation_vw> IST_TrayLocation_vw { get; set; }
    
        public virtual ObjectResult<IST_get_sample_aliquot_Result> IST_get_sample_aliquot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IST_get_sample_aliquot_Result>("IST_get_sample_aliquot");
        }
    
        public virtual int PopTrayMapTable(Nullable<int> p_traytype, Nullable<int> p_rows, Nullable<int> p_cols)
        {
            var p_traytypeParameter = p_traytype.HasValue ?
                new ObjectParameter("p_traytype", p_traytype) :
                new ObjectParameter("p_traytype", typeof(int));
    
            var p_rowsParameter = p_rows.HasValue ?
                new ObjectParameter("p_rows", p_rows) :
                new ObjectParameter("p_rows", typeof(int));
    
            var p_colsParameter = p_cols.HasValue ?
                new ObjectParameter("p_cols", p_cols) :
                new ObjectParameter("p_cols", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PopTrayMapTable", p_traytypeParameter, p_rowsParameter, p_colsParameter);
        }
    
        public virtual int sp_add_sample(string kbNumber, Nullable<System.DateTime> logDate, string patientId, string patientName, Nullable<System.DateTime> sampleDate)
        {
            var kbNumberParameter = kbNumber != null ?
                new ObjectParameter("KbNumber", kbNumber) :
                new ObjectParameter("KbNumber", typeof(string));
    
            var logDateParameter = logDate.HasValue ?
                new ObjectParameter("LogDate", logDate) :
                new ObjectParameter("LogDate", typeof(System.DateTime));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var sampleDateParameter = sampleDate.HasValue ?
                new ObjectParameter("SampleDate", sampleDate) :
                new ObjectParameter("SampleDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_sample", kbNumberParameter, logDateParameter, patientIdParameter, patientNameParameter, sampleDateParameter);
        }
    
        public virtual int sp_add_scan(Nullable<int> trayId, string trayCode, string trayTypeDescription, Nullable<System.DateTime> createDateTime)
        {
            var trayIdParameter = trayId.HasValue ?
                new ObjectParameter("TrayId", trayId) :
                new ObjectParameter("TrayId", typeof(int));
    
            var trayCodeParameter = trayCode != null ?
                new ObjectParameter("TrayCode", trayCode) :
                new ObjectParameter("TrayCode", typeof(string));
    
            var trayTypeDescriptionParameter = trayTypeDescription != null ?
                new ObjectParameter("TrayTypeDescription", trayTypeDescription) :
                new ObjectParameter("TrayTypeDescription", typeof(string));
    
            var createDateTimeParameter = createDateTime.HasValue ?
                new ObjectParameter("CreateDateTime", createDateTime) :
                new ObjectParameter("CreateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_scan", trayIdParameter, trayCodeParameter, trayTypeDescriptionParameter, createDateTimeParameter);
        }
    
        public virtual int sp_add_scan_detail(Nullable<int> scanId, Nullable<int> errorCode, string errorMessage, Nullable<int> positionNumber, string positionText, string aliquotId, string scannerType)
        {
            var scanIdParameter = scanId.HasValue ?
                new ObjectParameter("ScanId", scanId) :
                new ObjectParameter("ScanId", typeof(int));
    
            var errorCodeParameter = errorCode.HasValue ?
                new ObjectParameter("ErrorCode", errorCode) :
                new ObjectParameter("ErrorCode", typeof(int));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var positionNumberParameter = positionNumber.HasValue ?
                new ObjectParameter("PositionNumber", positionNumber) :
                new ObjectParameter("PositionNumber", typeof(int));
    
            var positionTextParameter = positionText != null ?
                new ObjectParameter("PositionText", positionText) :
                new ObjectParameter("PositionText", typeof(string));
    
            var aliquotIdParameter = aliquotId != null ?
                new ObjectParameter("AliquotId", aliquotId) :
                new ObjectParameter("AliquotId", typeof(string));
    
            var scannerTypeParameter = scannerType != null ?
                new ObjectParameter("ScannerType", scannerType) :
                new ObjectParameter("ScannerType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_scan_detail", scanIdParameter, errorCodeParameter, errorMessageParameter, positionNumberParameter, positionTextParameter, aliquotIdParameter, scannerTypeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_get_sample_Result> sp_get_sample(string kbNumber)
        {
            var kbNumberParameter = kbNumber != null ?
                new ObjectParameter("KbNumber", kbNumber) :
                new ObjectParameter("KbNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_sample_Result>("sp_get_sample", kbNumberParameter);
        }
    
        public virtual ObjectResult<sp_get_samples_Result> sp_get_samples()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_samples_Result>("sp_get_samples");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> sp_get_samples_last_update()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("sp_get_samples_last_update");
        }
    
        public virtual ObjectResult<sp_get_scan_Result> sp_get_scan(Nullable<int> trayId, Nullable<System.DateTime> createDateTime)
        {
            var trayIdParameter = trayId.HasValue ?
                new ObjectParameter("TrayId", trayId) :
                new ObjectParameter("TrayId", typeof(int));
    
            var createDateTimeParameter = createDateTime.HasValue ?
                new ObjectParameter("CreateDateTime", createDateTime) :
                new ObjectParameter("CreateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_scan_Result>("sp_get_scan", trayIdParameter, createDateTimeParameter);
        }
    
        public virtual ObjectResult<sp_get_sub_types_Result> sp_get_sub_types()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_sub_types_Result>("sp_get_sub_types");
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_IST_CloseSession(Nullable<int> p_sessionid, Nullable<int> p_userid, Nullable<int> p_drawerslot, Nullable<bool> p_override, Nullable<System.DateTime> p_closedate, ObjectParameter p_missing, ObjectParameter p_orphan, ObjectParameter p_relocate, ObjectParameter p_drawerslotoccupiedtrayid, ObjectParameter p_drawerslotoccupiedtraycode, ObjectParameter p_outputmessage, ObjectParameter p_drawerslotaction, ObjectParameter p_output)
        {
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_drawerslotParameter = p_drawerslot.HasValue ?
                new ObjectParameter("p_drawerslot", p_drawerslot) :
                new ObjectParameter("p_drawerslot", typeof(int));
    
            var p_overrideParameter = p_override.HasValue ?
                new ObjectParameter("p_override", p_override) :
                new ObjectParameter("p_override", typeof(bool));
    
            var p_closedateParameter = p_closedate.HasValue ?
                new ObjectParameter("p_closedate", p_closedate) :
                new ObjectParameter("p_closedate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_IST_CloseSession", p_sessionidParameter, p_useridParameter, p_drawerslotParameter, p_overrideParameter, p_closedateParameter, p_missing, p_orphan, p_relocate, p_drawerslotoccupiedtrayid, p_drawerslotoccupiedtraycode, p_outputmessage, p_drawerslotaction, p_output);
        }
    
        public virtual int sp_IST_CloseSessionDelete(Nullable<int> p_sessionId, Nullable<int> p_userid)
        {
            var p_sessionIdParameter = p_sessionId.HasValue ?
                new ObjectParameter("p_sessionId", p_sessionId) :
                new ObjectParameter("p_sessionId", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_CloseSessionDelete", p_sessionIdParameter, p_useridParameter);
        }
    
        public virtual int sp_IST_DeleteAliquot(string p_aliquotId, Nullable<int> p_userid)
        {
            var p_aliquotIdParameter = p_aliquotId != null ?
                new ObjectParameter("p_aliquotId", p_aliquotId) :
                new ObjectParameter("p_aliquotId", typeof(string));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_DeleteAliquot", p_aliquotIdParameter, p_useridParameter);
        }
    
        public virtual int sp_IST_DeleteAliquotLocation(Nullable<int> p_aliquotlocationid, Nullable<int> p_userid, string p_action, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_aliquotlocationidParameter = p_aliquotlocationid.HasValue ?
                new ObjectParameter("p_aliquotlocationid", p_aliquotlocationid) :
                new ObjectParameter("p_aliquotlocationid", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_DeleteAliquotLocation", p_aliquotlocationidParameter, p_useridParameter, p_actionParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_DeleteSampleAliquot(Nullable<int> p_samplealiquotid, string p_action, Nullable<int> p_userid, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_samplealiquotidParameter = p_samplealiquotid.HasValue ?
                new ObjectParameter("p_samplealiquotid", p_samplealiquotid) :
                new ObjectParameter("p_samplealiquotid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_DeleteSampleAliquot", p_samplealiquotidParameter, p_actionParameter, p_useridParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_DeleteTray(Nullable<int> p_trayId, Nullable<int> p_userid)
        {
            var p_trayIdParameter = p_trayId.HasValue ?
                new ObjectParameter("p_trayId", p_trayId) :
                new ObjectParameter("p_trayId", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_DeleteTray", p_trayIdParameter, p_useridParameter);
        }
    
        public virtual int sp_IST_DeleteTrayData(Nullable<int> p_trayId, Nullable<int> p_userid)
        {
            var p_trayIdParameter = p_trayId.HasValue ?
                new ObjectParameter("p_trayId", p_trayId) :
                new ObjectParameter("p_trayId", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_DeleteTrayData", p_trayIdParameter, p_useridParameter);
        }
    
        public virtual int sp_IST_DeleteUser(Nullable<int> p_userid, string p_action, Nullable<int> p_updateuserid, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            var p_updateuseridParameter = p_updateuserid.HasValue ?
                new ObjectParameter("p_updateuserid", p_updateuserid) :
                new ObjectParameter("p_updateuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_DeleteUser", p_useridParameter, p_actionParameter, p_updateuseridParameter, p_outputmessage, p_output);
        }
    
        public virtual ObjectResult<sp_IST_getAliquot_Result> sp_IST_getAliquot(string aliquotId)
        {
            var aliquotIdParameter = aliquotId != null ?
                new ObjectParameter("AliquotId", aliquotId) :
                new ObjectParameter("AliquotId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_getAliquot_Result>("sp_IST_getAliquot", aliquotIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetApplicationRoles_Result> sp_IST_GetApplicationRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetApplicationRoles_Result>("sp_IST_GetApplicationRoles");
        }
    
        public virtual ObjectResult<sp_IST_GetDrawerByDescription_Result> sp_IST_GetDrawerByDescription(string drawerDescription)
        {
            var drawerDescriptionParameter = drawerDescription != null ?
                new ObjectParameter("DrawerDescription", drawerDescription) :
                new ObjectParameter("DrawerDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetDrawerByDescription_Result>("sp_IST_GetDrawerByDescription", drawerDescriptionParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetDrawerById_Result> sp_IST_GetDrawerById(Nullable<int> drawerId)
        {
            var drawerIdParameter = drawerId.HasValue ?
                new ObjectParameter("DrawerId", drawerId) :
                new ObjectParameter("DrawerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetDrawerById_Result>("sp_IST_GetDrawerById", drawerIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetDrawers_Result> sp_IST_GetDrawers(Nullable<int> freezerId)
        {
            var freezerIdParameter = freezerId.HasValue ?
                new ObjectParameter("FreezerId", freezerId) :
                new ObjectParameter("FreezerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetDrawers_Result>("sp_IST_GetDrawers", freezerIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetDrawersFree_Result> sp_IST_GetDrawersFree(Nullable<int> freezerId)
        {
            var freezerIdParameter = freezerId.HasValue ?
                new ObjectParameter("FreezerId", freezerId) :
                new ObjectParameter("FreezerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetDrawersFree_Result>("sp_IST_GetDrawersFree", freezerIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetDrawerSlots_Result> sp_IST_GetDrawerSlots(Nullable<int> drawerId)
        {
            var drawerIdParameter = drawerId.HasValue ?
                new ObjectParameter("DrawerId", drawerId) :
                new ObjectParameter("DrawerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetDrawerSlots_Result>("sp_IST_GetDrawerSlots", drawerIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetDrawerSlotsById_Result> sp_IST_GetDrawerSlotsById(Nullable<int> drawerSlotId)
        {
            var drawerSlotIdParameter = drawerSlotId.HasValue ?
                new ObjectParameter("DrawerSlotId", drawerSlotId) :
                new ObjectParameter("DrawerSlotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetDrawerSlotsById_Result>("sp_IST_GetDrawerSlotsById", drawerSlotIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetDrawerSlotsFree_Result> sp_IST_GetDrawerSlotsFree(Nullable<int> drawerId, string trayDescription)
        {
            var drawerIdParameter = drawerId.HasValue ?
                new ObjectParameter("DrawerId", drawerId) :
                new ObjectParameter("DrawerId", typeof(int));
    
            var trayDescriptionParameter = trayDescription != null ?
                new ObjectParameter("TrayDescription", trayDescription) :
                new ObjectParameter("TrayDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetDrawerSlotsFree_Result>("sp_IST_GetDrawerSlotsFree", drawerIdParameter, trayDescriptionParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetFreezerMap_Result> sp_IST_GetFreezerMap(Nullable<int> freezerId, string drawerDescription, string slot, Nullable<int> trayId)
        {
            var freezerIdParameter = freezerId.HasValue ?
                new ObjectParameter("FreezerId", freezerId) :
                new ObjectParameter("FreezerId", typeof(int));
    
            var drawerDescriptionParameter = drawerDescription != null ?
                new ObjectParameter("DrawerDescription", drawerDescription) :
                new ObjectParameter("DrawerDescription", typeof(string));
    
            var slotParameter = slot != null ?
                new ObjectParameter("Slot", slot) :
                new ObjectParameter("Slot", typeof(string));
    
            var trayIdParameter = trayId.HasValue ?
                new ObjectParameter("TrayId", trayId) :
                new ObjectParameter("TrayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetFreezerMap_Result>("sp_IST_GetFreezerMap", freezerIdParameter, drawerDescriptionParameter, slotParameter, trayIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetFreezers_Result> sp_IST_GetFreezers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetFreezers_Result>("sp_IST_GetFreezers");
        }
    
        public virtual ObjectResult<sp_IST_GetScanDetails_Result> sp_IST_GetScanDetails(Nullable<int> p_scanId)
        {
            var p_scanIdParameter = p_scanId.HasValue ?
                new ObjectParameter("p_scanId", p_scanId) :
                new ObjectParameter("p_scanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetScanDetails_Result>("sp_IST_GetScanDetails", p_scanIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetScans_Result> sp_IST_GetScans(Nullable<int> p_userId)
        {
            var p_userIdParameter = p_userId.HasValue ?
                new ObjectParameter("p_userId", p_userId) :
                new ObjectParameter("p_userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetScans_Result>("sp_IST_GetScans", p_userIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetScansByTray_Result> sp_IST_GetScansByTray(Nullable<int> p_trayId)
        {
            var p_trayIdParameter = p_trayId.HasValue ?
                new ObjectParameter("p_trayId", p_trayId) :
                new ObjectParameter("p_trayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetScansByTray_Result>("sp_IST_GetScansByTray", p_trayIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetSession_Result> sp_IST_GetSession(Nullable<int> p_userId)
        {
            var p_userIdParameter = p_userId.HasValue ?
                new ObjectParameter("p_userId", p_userId) :
                new ObjectParameter("p_userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetSession_Result>("sp_IST_GetSession", p_userIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetSessionMissingSampleAliquots_Result> sp_IST_GetSessionMissingSampleAliquots(Nullable<int> p_sessionId)
        {
            var p_sessionIdParameter = p_sessionId.HasValue ?
                new ObjectParameter("p_sessionId", p_sessionId) :
                new ObjectParameter("p_sessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetSessionMissingSampleAliquots_Result>("sp_IST_GetSessionMissingSampleAliquots", p_sessionIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetSessionOrphanAliquots_Result> sp_IST_GetSessionOrphanAliquots(Nullable<int> p_sessionId)
        {
            var p_sessionIdParameter = p_sessionId.HasValue ?
                new ObjectParameter("p_sessionId", p_sessionId) :
                new ObjectParameter("p_sessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetSessionOrphanAliquots_Result>("sp_IST_GetSessionOrphanAliquots", p_sessionIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetSessionRelocateAliquots_Result> sp_IST_GetSessionRelocateAliquots(Nullable<int> p_sessionId)
        {
            var p_sessionIdParameter = p_sessionId.HasValue ?
                new ObjectParameter("p_sessionId", p_sessionId) :
                new ObjectParameter("p_sessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetSessionRelocateAliquots_Result>("sp_IST_GetSessionRelocateAliquots", p_sessionIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetSessions_Result> sp_IST_GetSessions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetSessions_Result>("sp_IST_GetSessions");
        }
    
        public virtual ObjectResult<sp_IST_GetSessionScan_Result> sp_IST_GetSessionScan(Nullable<int> p_userid)
        {
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetSessionScan_Result>("sp_IST_GetSessionScan", p_useridParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetSessionUnknownAliquots_Result> sp_IST_GetSessionUnknownAliquots(Nullable<int> p_sessionId)
        {
            var p_sessionIdParameter = p_sessionId.HasValue ?
                new ObjectParameter("p_sessionId", p_sessionId) :
                new ObjectParameter("p_sessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetSessionUnknownAliquots_Result>("sp_IST_GetSessionUnknownAliquots", p_sessionIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayByDrawerSlot_Result> sp_IST_GetTrayByDrawerSlot(Nullable<int> p_drawerSlotId)
        {
            var p_drawerSlotIdParameter = p_drawerSlotId.HasValue ?
                new ObjectParameter("p_drawerSlotId", p_drawerSlotId) :
                new ObjectParameter("p_drawerSlotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayByDrawerSlot_Result>("sp_IST_GetTrayByDrawerSlot", p_drawerSlotIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayById_Result> sp_IST_GetTrayById(Nullable<int> p_trayId)
        {
            var p_trayIdParameter = p_trayId.HasValue ?
                new ObjectParameter("p_trayId", p_trayId) :
                new ObjectParameter("p_trayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayById_Result>("sp_IST_GetTrayById", p_trayIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayByName_Result> sp_IST_GetTrayByName(string p_trayname)
        {
            var p_traynameParameter = p_trayname != null ?
                new ObjectParameter("p_trayname", p_trayname) :
                new ObjectParameter("p_trayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayByName_Result>("sp_IST_GetTrayByName", p_traynameParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayBySample_Result> sp_IST_GetTrayBySample(string sampleNumber, string trayDescription, string patientName)
        {
            var sampleNumberParameter = sampleNumber != null ?
                new ObjectParameter("SampleNumber", sampleNumber) :
                new ObjectParameter("SampleNumber", typeof(string));
    
            var trayDescriptionParameter = trayDescription != null ?
                new ObjectParameter("TrayDescription", trayDescription) :
                new ObjectParameter("TrayDescription", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayBySample_Result>("sp_IST_GetTrayBySample", sampleNumberParameter, trayDescriptionParameter, patientNameParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayData_Result> sp_IST_GetTrayData(string trayDescription)
        {
            var trayDescriptionParameter = trayDescription != null ?
                new ObjectParameter("TrayDescription", trayDescription) :
                new ObjectParameter("TrayDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayData_Result>("sp_IST_GetTrayData", trayDescriptionParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayLocation_Result> sp_IST_GetTrayLocation(Nullable<int> p_trayId)
        {
            var p_trayIdParameter = p_trayId.HasValue ?
                new ObjectParameter("p_trayId", p_trayId) :
                new ObjectParameter("p_trayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayLocation_Result>("sp_IST_GetTrayLocation", p_trayIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayMap_Result> sp_IST_GetTrayMap(Nullable<int> trayId)
        {
            var trayIdParameter = trayId.HasValue ?
                new ObjectParameter("TrayId", trayId) :
                new ObjectParameter("TrayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayMap_Result>("sp_IST_GetTrayMap", trayIdParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrayMapBySample_Result> sp_IST_GetTrayMapBySample(string sampleNumber, string trayDescription, string patientName)
        {
            var sampleNumberParameter = sampleNumber != null ?
                new ObjectParameter("SampleNumber", sampleNumber) :
                new ObjectParameter("SampleNumber", typeof(string));
    
            var trayDescriptionParameter = trayDescription != null ?
                new ObjectParameter("TrayDescription", trayDescription) :
                new ObjectParameter("TrayDescription", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrayMapBySample_Result>("sp_IST_GetTrayMapBySample", sampleNumberParameter, trayDescriptionParameter, patientNameParameter);
        }
    
        public virtual ObjectResult<sp_IST_GetTrays_Result> sp_IST_GetTrays()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetTrays_Result>("sp_IST_GetTrays");
        }
    
        public virtual ObjectResult<sp_IST_GetUsers_Result> sp_IST_GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IST_GetUsers_Result>("sp_IST_GetUsers");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_IST_OpenSession(string p_traycode, Nullable<bool> p_closeexistingsession, Nullable<int> p_sessionTypeId, ObjectParameter p_userid, ObjectParameter p_trayid, ObjectParameter p_sessionid, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_traycodeParameter = p_traycode != null ?
                new ObjectParameter("p_traycode", p_traycode) :
                new ObjectParameter("p_traycode", typeof(string));
    
            var p_closeexistingsessionParameter = p_closeexistingsession.HasValue ?
                new ObjectParameter("p_closeexistingsession", p_closeexistingsession) :
                new ObjectParameter("p_closeexistingsession", typeof(bool));
    
            var p_sessionTypeIdParameter = p_sessionTypeId.HasValue ?
                new ObjectParameter("p_sessionTypeId", p_sessionTypeId) :
                new ObjectParameter("p_sessionTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_IST_OpenSession", p_traycodeParameter, p_closeexistingsessionParameter, p_sessionTypeIdParameter, p_userid, p_trayid, p_sessionid, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_PopALTable(Nullable<int> p_reccountid, Nullable<int> p_trayid, string p_statusid, Nullable<int> p_sessionid, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_reccountidParameter = p_reccountid.HasValue ?
                new ObjectParameter("p_reccountid", p_reccountid) :
                new ObjectParameter("p_reccountid", typeof(int));
    
            var p_trayidParameter = p_trayid.HasValue ?
                new ObjectParameter("p_trayid", p_trayid) :
                new ObjectParameter("p_trayid", typeof(int));
    
            var p_statusidParameter = p_statusid != null ?
                new ObjectParameter("p_statusid", p_statusid) :
                new ObjectParameter("p_statusid", typeof(string));
    
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_PopALTable", p_reccountidParameter, p_trayidParameter, p_statusidParameter, p_sessionidParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_PopSATable(Nullable<int> p_reccountid, Nullable<int> p_subtypeid, string p_statusid, Nullable<int> p_sessionid, string p_action, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_reccountidParameter = p_reccountid.HasValue ?
                new ObjectParameter("p_reccountid", p_reccountid) :
                new ObjectParameter("p_reccountid", typeof(int));
    
            var p_subtypeidParameter = p_subtypeid.HasValue ?
                new ObjectParameter("p_subtypeid", p_subtypeid) :
                new ObjectParameter("p_subtypeid", typeof(int));
    
            var p_statusidParameter = p_statusid != null ?
                new ObjectParameter("p_statusid", p_statusid) :
                new ObjectParameter("p_statusid", typeof(string));
    
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_PopSATable", p_reccountidParameter, p_subtypeidParameter, p_statusidParameter, p_sessionidParameter, p_actionParameter, p_outputmessage, p_output);
        }
    
        public virtual ObjectResult<string> sp_IST_ProcessTrayScan(Nullable<int> p_trayid, string p_traydescription, Nullable<int> p_traycapacity, string p_aliqout_traylocationlist, Nullable<int> p_userid, ObjectParameter p_unknownaliquotlist, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_trayidParameter = p_trayid.HasValue ?
                new ObjectParameter("p_trayid", p_trayid) :
                new ObjectParameter("p_trayid", typeof(int));
    
            var p_traydescriptionParameter = p_traydescription != null ?
                new ObjectParameter("p_traydescription", p_traydescription) :
                new ObjectParameter("p_traydescription", typeof(string));
    
            var p_traycapacityParameter = p_traycapacity.HasValue ?
                new ObjectParameter("p_traycapacity", p_traycapacity) :
                new ObjectParameter("p_traycapacity", typeof(int));
    
            var p_aliqout_traylocationlistParameter = p_aliqout_traylocationlist != null ?
                new ObjectParameter("p_aliqout_traylocationlist", p_aliqout_traylocationlist) :
                new ObjectParameter("p_aliqout_traylocationlist", typeof(string));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_IST_ProcessTrayScan", p_trayidParameter, p_traydescriptionParameter, p_traycapacityParameter, p_aliqout_traylocationlistParameter, p_useridParameter, p_unknownaliquotlist, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_TrayDrawerSlotValidate(Nullable<int> p_sessionid, Nullable<int> p_userid, Nullable<int> p_drawerslot, ObjectParameter p_drawerslotoccupiedtrayid, ObjectParameter p_drawerslotoccupiedtraycode, ObjectParameter p_drawerslotaction, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_drawerslotParameter = p_drawerslot.HasValue ?
                new ObjectParameter("p_drawerslot", p_drawerslot) :
                new ObjectParameter("p_drawerslot", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_TrayDrawerSlotValidate", p_sessionidParameter, p_useridParameter, p_drawerslotParameter, p_drawerslotoccupiedtrayid, p_drawerslotoccupiedtraycode, p_drawerslotaction, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_UpdateAliquotLocation(Nullable<int> p_aliquotlocationid, Nullable<int> p_trayid, Nullable<int> p_tubelocation, string p_tubegridlocation, Nullable<int> p_custuserid, Nullable<int> p_samplealiquotid, string p_statusid, Nullable<int> p_sessionid, Nullable<int> p_userid, string p_action, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_aliquotlocationidParameter = p_aliquotlocationid.HasValue ?
                new ObjectParameter("p_aliquotlocationid", p_aliquotlocationid) :
                new ObjectParameter("p_aliquotlocationid", typeof(int));
    
            var p_trayidParameter = p_trayid.HasValue ?
                new ObjectParameter("p_trayid", p_trayid) :
                new ObjectParameter("p_trayid", typeof(int));
    
            var p_tubelocationParameter = p_tubelocation.HasValue ?
                new ObjectParameter("p_tubelocation", p_tubelocation) :
                new ObjectParameter("p_tubelocation", typeof(int));
    
            var p_tubegridlocationParameter = p_tubegridlocation != null ?
                new ObjectParameter("p_tubegridlocation", p_tubegridlocation) :
                new ObjectParameter("p_tubegridlocation", typeof(string));
    
            var p_custuseridParameter = p_custuserid.HasValue ?
                new ObjectParameter("p_custuserid", p_custuserid) :
                new ObjectParameter("p_custuserid", typeof(int));
    
            var p_samplealiquotidParameter = p_samplealiquotid.HasValue ?
                new ObjectParameter("p_samplealiquotid", p_samplealiquotid) :
                new ObjectParameter("p_samplealiquotid", typeof(int));
    
            var p_statusidParameter = p_statusid != null ?
                new ObjectParameter("p_statusid", p_statusid) :
                new ObjectParameter("p_statusid", typeof(string));
    
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_UpdateAliquotLocation", p_aliquotlocationidParameter, p_trayidParameter, p_tubelocationParameter, p_tubegridlocationParameter, p_custuseridParameter, p_samplealiquotidParameter, p_statusidParameter, p_sessionidParameter, p_useridParameter, p_actionParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_UpdateException(Nullable<int> p_exceptionid, Nullable<int> p_samplealiquotid, Nullable<int> p_aliquotlocationid, string p_unknownaliquotid, Nullable<int> p_sessionid, Nullable<int> p_trayid, Nullable<int> p_tubelocation, string p_tubegridtext, Nullable<int> p_drawerslotid, Nullable<int> p_exceptiontypeid, Nullable<int> p_userid, Nullable<bool> p_suppress, string p_action, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_exceptionidParameter = p_exceptionid.HasValue ?
                new ObjectParameter("p_exceptionid", p_exceptionid) :
                new ObjectParameter("p_exceptionid", typeof(int));
    
            var p_samplealiquotidParameter = p_samplealiquotid.HasValue ?
                new ObjectParameter("p_samplealiquotid", p_samplealiquotid) :
                new ObjectParameter("p_samplealiquotid", typeof(int));
    
            var p_aliquotlocationidParameter = p_aliquotlocationid.HasValue ?
                new ObjectParameter("p_aliquotlocationid", p_aliquotlocationid) :
                new ObjectParameter("p_aliquotlocationid", typeof(int));
    
            var p_unknownaliquotidParameter = p_unknownaliquotid != null ?
                new ObjectParameter("p_unknownaliquotid", p_unknownaliquotid) :
                new ObjectParameter("p_unknownaliquotid", typeof(string));
    
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_trayidParameter = p_trayid.HasValue ?
                new ObjectParameter("p_trayid", p_trayid) :
                new ObjectParameter("p_trayid", typeof(int));
    
            var p_tubelocationParameter = p_tubelocation.HasValue ?
                new ObjectParameter("p_tubelocation", p_tubelocation) :
                new ObjectParameter("p_tubelocation", typeof(int));
    
            var p_tubegridtextParameter = p_tubegridtext != null ?
                new ObjectParameter("p_tubegridtext", p_tubegridtext) :
                new ObjectParameter("p_tubegridtext", typeof(string));
    
            var p_drawerslotidParameter = p_drawerslotid.HasValue ?
                new ObjectParameter("p_drawerslotid", p_drawerslotid) :
                new ObjectParameter("p_drawerslotid", typeof(int));
    
            var p_exceptiontypeidParameter = p_exceptiontypeid.HasValue ?
                new ObjectParameter("p_exceptiontypeid", p_exceptiontypeid) :
                new ObjectParameter("p_exceptiontypeid", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_suppressParameter = p_suppress.HasValue ?
                new ObjectParameter("p_suppress", p_suppress) :
                new ObjectParameter("p_suppress", typeof(bool));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_UpdateException", p_exceptionidParameter, p_samplealiquotidParameter, p_aliquotlocationidParameter, p_unknownaliquotidParameter, p_sessionidParameter, p_trayidParameter, p_tubelocationParameter, p_tubegridtextParameter, p_drawerslotidParameter, p_exceptiontypeidParameter, p_useridParameter, p_suppressParameter, p_actionParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_UpdateSampleAliquot(Nullable<int> p_samplealiquotid, string p_sampleid, string p_aliquotid, Nullable<int> p_subtypeid, string p_statusid, ObjectParameter p_sessionid, Nullable<int> p_userid, string p_action, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_samplealiquotidParameter = p_samplealiquotid.HasValue ?
                new ObjectParameter("p_samplealiquotid", p_samplealiquotid) :
                new ObjectParameter("p_samplealiquotid", typeof(int));
    
            var p_sampleidParameter = p_sampleid != null ?
                new ObjectParameter("p_sampleid", p_sampleid) :
                new ObjectParameter("p_sampleid", typeof(string));
    
            var p_aliquotidParameter = p_aliquotid != null ?
                new ObjectParameter("p_aliquotid", p_aliquotid) :
                new ObjectParameter("p_aliquotid", typeof(string));
    
            var p_subtypeidParameter = p_subtypeid.HasValue ?
                new ObjectParameter("p_subtypeid", p_subtypeid) :
                new ObjectParameter("p_subtypeid", typeof(int));
    
            var p_statusidParameter = p_statusid != null ?
                new ObjectParameter("p_statusid", p_statusid) :
                new ObjectParameter("p_statusid", typeof(string));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_UpdateSampleAliquot", p_samplealiquotidParameter, p_sampleidParameter, p_aliquotidParameter, p_subtypeidParameter, p_statusidParameter, p_sessionid, p_useridParameter, p_actionParameter, p_outputmessage, p_output);
        }
    
        public virtual ObjectResult<string> sp_IST_UpdateSession(Nullable<int> p_sessionid, Nullable<int> p_userid, string p_statusid, Nullable<int> p_sessionTypeId, Nullable<System.DateTime> p_closedate, string p_action, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_statusidParameter = p_statusid != null ?
                new ObjectParameter("p_statusid", p_statusid) :
                new ObjectParameter("p_statusid", typeof(string));
    
            var p_sessionTypeIdParameter = p_sessionTypeId.HasValue ?
                new ObjectParameter("p_sessionTypeId", p_sessionTypeId) :
                new ObjectParameter("p_sessionTypeId", typeof(int));
    
            var p_closedateParameter = p_closedate.HasValue ?
                new ObjectParameter("p_closedate", p_closedate) :
                new ObjectParameter("p_closedate", typeof(System.DateTime));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_IST_UpdateSession", p_sessionidParameter, p_useridParameter, p_statusidParameter, p_sessionTypeIdParameter, p_closedateParameter, p_actionParameter, p_outputmessage, p_output);
        }
    
        public virtual ObjectResult<string> sp_IST_UpdateTray(Nullable<int> p_trayid, string p_traydescription, Nullable<int> p_traycapacity, Nullable<int> p_traytype, string p_traytypecode, string p_statusid, Nullable<int> p_sessionid, string p_action, Nullable<int> p_userid, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_trayidParameter = p_trayid.HasValue ?
                new ObjectParameter("p_trayid", p_trayid) :
                new ObjectParameter("p_trayid", typeof(int));
    
            var p_traydescriptionParameter = p_traydescription != null ?
                new ObjectParameter("p_traydescription", p_traydescription) :
                new ObjectParameter("p_traydescription", typeof(string));
    
            var p_traycapacityParameter = p_traycapacity.HasValue ?
                new ObjectParameter("p_traycapacity", p_traycapacity) :
                new ObjectParameter("p_traycapacity", typeof(int));
    
            var p_traytypeParameter = p_traytype.HasValue ?
                new ObjectParameter("p_traytype", p_traytype) :
                new ObjectParameter("p_traytype", typeof(int));
    
            var p_traytypecodeParameter = p_traytypecode != null ?
                new ObjectParameter("p_traytypecode", p_traytypecode) :
                new ObjectParameter("p_traytypecode", typeof(string));
    
            var p_statusidParameter = p_statusid != null ?
                new ObjectParameter("p_statusid", p_statusid) :
                new ObjectParameter("p_statusid", typeof(string));
    
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_IST_UpdateTray", p_trayidParameter, p_traydescriptionParameter, p_traycapacityParameter, p_traytypeParameter, p_traytypecodeParameter, p_statusidParameter, p_sessionidParameter, p_actionParameter, p_useridParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_UpdateTrayLocation(Nullable<int> p_traylocationid, Nullable<int> p_drawerslotid, Nullable<int> p_trayid, Nullable<int> p_sessionid, Nullable<int> p_userid, string p_action, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_traylocationidParameter = p_traylocationid.HasValue ?
                new ObjectParameter("p_traylocationid", p_traylocationid) :
                new ObjectParameter("p_traylocationid", typeof(int));
    
            var p_drawerslotidParameter = p_drawerslotid.HasValue ?
                new ObjectParameter("p_drawerslotid", p_drawerslotid) :
                new ObjectParameter("p_drawerslotid", typeof(int));
    
            var p_trayidParameter = p_trayid.HasValue ?
                new ObjectParameter("p_trayid", p_trayid) :
                new ObjectParameter("p_trayid", typeof(int));
    
            var p_sessionidParameter = p_sessionid.HasValue ?
                new ObjectParameter("p_sessionid", p_sessionid) :
                new ObjectParameter("p_sessionid", typeof(int));
    
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_UpdateTrayLocation", p_traylocationidParameter, p_drawerslotidParameter, p_trayidParameter, p_sessionidParameter, p_useridParameter, p_actionParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_IST_UpdateUser(Nullable<int> p_userid, string p_username, string p_usernameNormalized, string p_email, string p_emailNormalized, Nullable<int> p_roleid, string p_passwordhash, string p_statusid, string p_action, Nullable<int> p_updateuserid, ObjectParameter p_outputmessage, ObjectParameter p_output)
        {
            var p_useridParameter = p_userid.HasValue ?
                new ObjectParameter("p_userid", p_userid) :
                new ObjectParameter("p_userid", typeof(int));
    
            var p_usernameParameter = p_username != null ?
                new ObjectParameter("p_username", p_username) :
                new ObjectParameter("p_username", typeof(string));
    
            var p_usernameNormalizedParameter = p_usernameNormalized != null ?
                new ObjectParameter("p_usernameNormalized", p_usernameNormalized) :
                new ObjectParameter("p_usernameNormalized", typeof(string));
    
            var p_emailParameter = p_email != null ?
                new ObjectParameter("p_email", p_email) :
                new ObjectParameter("p_email", typeof(string));
    
            var p_emailNormalizedParameter = p_emailNormalized != null ?
                new ObjectParameter("p_emailNormalized", p_emailNormalized) :
                new ObjectParameter("p_emailNormalized", typeof(string));
    
            var p_roleidParameter = p_roleid.HasValue ?
                new ObjectParameter("p_roleid", p_roleid) :
                new ObjectParameter("p_roleid", typeof(int));
    
            var p_passwordhashParameter = p_passwordhash != null ?
                new ObjectParameter("p_passwordhash", p_passwordhash) :
                new ObjectParameter("p_passwordhash", typeof(string));
    
            var p_statusidParameter = p_statusid != null ?
                new ObjectParameter("p_statusid", p_statusid) :
                new ObjectParameter("p_statusid", typeof(string));
    
            var p_actionParameter = p_action != null ?
                new ObjectParameter("p_action", p_action) :
                new ObjectParameter("p_action", typeof(string));
    
            var p_updateuseridParameter = p_updateuserid.HasValue ?
                new ObjectParameter("p_updateuserid", p_updateuserid) :
                new ObjectParameter("p_updateuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IST_UpdateUser", p_useridParameter, p_usernameParameter, p_usernameNormalizedParameter, p_emailParameter, p_emailNormalizedParameter, p_roleidParameter, p_passwordhashParameter, p_statusidParameter, p_actionParameter, p_updateuseridParameter, p_outputmessage, p_output);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_update_sample(string kbNumber, Nullable<System.DateTime> logDate, string patientId, string patientName)
        {
            var kbNumberParameter = kbNumber != null ?
                new ObjectParameter("KbNumber", kbNumber) :
                new ObjectParameter("KbNumber", typeof(string));
    
            var logDateParameter = logDate.HasValue ?
                new ObjectParameter("LogDate", logDate) :
                new ObjectParameter("LogDate", typeof(System.DateTime));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_sample", kbNumberParameter, logDateParameter, patientIdParameter, patientNameParameter);
        }
    
        public virtual int sp_update_user(Nullable<int> userId, string userName, string netUser, string status, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var netUserParameter = netUser != null ?
                new ObjectParameter("NetUser", netUser) :
                new ObjectParameter("NetUser", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_user", userIdParameter, userNameParameter, netUserParameter, statusParameter, roleIdParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
