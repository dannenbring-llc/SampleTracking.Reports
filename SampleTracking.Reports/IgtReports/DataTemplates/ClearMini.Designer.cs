//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SampleTracking.Reports.IgtReports.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ClearMini")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ClearMini : global::System.Data.DataSet {
        
        private PatientsDataTable tablePatients;
        
        private SamplesDataTable tableSamples;
        
        private global::System.Data.DataRelation relationPatientsSamples;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ClearMini() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ClearMini(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Patients"] != null)) {
                    base.Tables.Add(new PatientsDataTable(ds.Tables["Patients"]));
                }
                if ((ds.Tables["Samples"] != null)) {
                    base.Tables.Add(new SamplesDataTable(ds.Tables["Samples"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PatientsDataTable Patients {
            get {
                return this.tablePatients;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SamplesDataTable Samples {
            get {
                return this.tableSamples;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ClearMini cln = ((ClearMini)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Patients"] != null)) {
                    base.Tables.Add(new PatientsDataTable(ds.Tables["Patients"]));
                }
                if ((ds.Tables["Samples"] != null)) {
                    base.Tables.Add(new SamplesDataTable(ds.Tables["Samples"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePatients = ((PatientsDataTable)(base.Tables["Patients"]));
            if ((initTable == true)) {
                if ((this.tablePatients != null)) {
                    this.tablePatients.InitVars();
                }
            }
            this.tableSamples = ((SamplesDataTable)(base.Tables["Samples"]));
            if ((initTable == true)) {
                if ((this.tableSamples != null)) {
                    this.tableSamples.InitVars();
                }
            }
            this.relationPatientsSamples = this.Relations["PatientsSamples"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ClearMini";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ClearMini.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePatients = new PatientsDataTable();
            base.Tables.Add(this.tablePatients);
            this.tableSamples = new SamplesDataTable();
            base.Tables.Add(this.tableSamples);
            this.relationPatientsSamples = new global::System.Data.DataRelation("PatientsSamples", new global::System.Data.DataColumn[] {
                        this.tablePatients.PatIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSamples.PatIDColumn}, false);
            this.Relations.Add(this.relationPatientsSamples);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePatients() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSamples() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ClearMini ds = new ClearMini();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PatientsRowChangeEventHandler(object sender, PatientsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SamplesRowChangeEventHandler(object sender, SamplesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PatientsDataTable : global::System.Data.TypedTableBase<PatientsRow> {
            
            private global::System.Data.DataColumn columnPatID;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMidInit;
            
            private global::System.Data.DataColumn columnABO;
            
            private global::System.Data.DataColumn columnRelation;
            
            private global::System.Data.DataColumn columnDoctorName;
            
            private global::System.Data.DataColumn columnHospitalID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnWP;
            
            private global::System.Data.DataColumn columnUNOSActive;
            
            private global::System.Data.DataColumn columnOrgan;
            
            private global::System.Data.DataColumn columnKidney;
            
            private global::System.Data.DataColumn columnPancreas;
            
            private global::System.Data.DataColumn columnBirthDate;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnRace;
            
            private global::System.Data.DataColumn columnDisease;
            
            private global::System.Data.DataColumn columnLambdaName;
            
            private global::System.Data.DataColumn columnABOIncompatible;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifyDate;
            
            private global::System.Data.DataColumn columnPriorTransplants;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnPregnancy;
            
            private global::System.Data.DataColumn columnTransfusion;
            
            private global::System.Data.DataColumn columnSmallIntestine;
            
            private global::System.Data.DataColumn columnLiver;
            
            private global::System.Data.DataColumn columnBoneMarrow;
            
            private global::System.Data.DataColumn columnLung;
            
            private global::System.Data.DataColumn columnHeart;
            
            private global::System.Data.DataColumn columnAddOrgan1;
            
            private global::System.Data.DataColumn columnAddOrgan2;
            
            private global::System.Data.DataColumn columnHIV;
            
            private global::System.Data.DataColumn columnUNOSNumber;
            
            private global::System.Data.DataColumn columnMisc;
            
            private global::System.Data.DataColumn columnQC;
            
            private global::System.Data.DataColumn columnIslet;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnHospitalPatID;
            
            private global::System.Data.DataColumn columnMNRID;
            
            private global::System.Data.DataColumn columnAltruistic;
            
            private global::System.Data.DataColumn columnSensitized;
            
            private global::System.Data.DataColumn columnDonor_SSAN;
            
            private global::System.Data.DataColumn columnAuto_AB;
            
            private global::System.Data.DataColumn columnAuto_AB_Text;
            
            private global::System.Data.DataColumn columnAdsorb;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnAlias;
            
            private global::System.Data.DataColumn columnPatCode;
            
            private global::System.Data.DataColumn columnNKRPat;
            
            private global::System.Data.DataColumn columnNKRCode;
            
            private global::System.Data.DataColumn columnListingDate;
            
            private global::System.Data.DataColumn columnHep_C;
            
            private global::System.Data.DataColumn columnA1_Subtype;
            
            private global::System.Data.DataColumn columnRBC_Ab;
            
            private global::System.Data.DataColumn columnEDTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsDataTable() {
                this.TableName = "Patients";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PatientsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PatientsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatIDColumn {
                get {
                    return this.columnPatID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MidInitColumn {
                get {
                    return this.columnMidInit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABOColumn {
                get {
                    return this.columnABO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RelationColumn {
                get {
                    return this.columnRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DoctorNameColumn {
                get {
                    return this.columnDoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HospitalIDColumn {
                get {
                    return this.columnHospitalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WPColumn {
                get {
                    return this.columnWP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UNOSActiveColumn {
                get {
                    return this.columnUNOSActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OrganColumn {
                get {
                    return this.columnOrgan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KidneyColumn {
                get {
                    return this.columnKidney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PancreasColumn {
                get {
                    return this.columnPancreas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BirthDateColumn {
                get {
                    return this.columnBirthDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RaceColumn {
                get {
                    return this.columnRace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiseaseColumn {
                get {
                    return this.columnDisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LambdaNameColumn {
                get {
                    return this.columnLambdaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABOIncompatibleColumn {
                get {
                    return this.columnABOIncompatible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ModifyDateColumn {
                get {
                    return this.columnModifyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PriorTransplantsColumn {
                get {
                    return this.columnPriorTransplants;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PregnancyColumn {
                get {
                    return this.columnPregnancy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransfusionColumn {
                get {
                    return this.columnTransfusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SmallIntestineColumn {
                get {
                    return this.columnSmallIntestine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LiverColumn {
                get {
                    return this.columnLiver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BoneMarrowColumn {
                get {
                    return this.columnBoneMarrow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LungColumn {
                get {
                    return this.columnLung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HeartColumn {
                get {
                    return this.columnHeart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddOrgan1Column {
                get {
                    return this.columnAddOrgan1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddOrgan2Column {
                get {
                    return this.columnAddOrgan2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HIVColumn {
                get {
                    return this.columnHIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UNOSNumberColumn {
                get {
                    return this.columnUNOSNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MiscColumn {
                get {
                    return this.columnMisc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QCColumn {
                get {
                    return this.columnQC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsletColumn {
                get {
                    return this.columnIslet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HospitalPatIDColumn {
                get {
                    return this.columnHospitalPatID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MNRIDColumn {
                get {
                    return this.columnMNRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AltruisticColumn {
                get {
                    return this.columnAltruistic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SensitizedColumn {
                get {
                    return this.columnSensitized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Donor_SSANColumn {
                get {
                    return this.columnDonor_SSAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Auto_ABColumn {
                get {
                    return this.columnAuto_AB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Auto_AB_TextColumn {
                get {
                    return this.columnAuto_AB_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AdsorbColumn {
                get {
                    return this.columnAdsorb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AliasColumn {
                get {
                    return this.columnAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatCodeColumn {
                get {
                    return this.columnPatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NKRPatColumn {
                get {
                    return this.columnNKRPat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NKRCodeColumn {
                get {
                    return this.columnNKRCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ListingDateColumn {
                get {
                    return this.columnListingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Hep_CColumn {
                get {
                    return this.columnHep_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A1_SubtypeColumn {
                get {
                    return this.columnA1_Subtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RBC_AbColumn {
                get {
                    return this.columnRBC_Ab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDTAColumn {
                get {
                    return this.columnEDTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsRow this[int index] {
                get {
                    return ((PatientsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PatientsRowChangeEventHandler PatientsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PatientsRowChangeEventHandler PatientsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PatientsRowChangeEventHandler PatientsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PatientsRowChangeEventHandler PatientsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPatientsRow(PatientsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsRow AddPatientsRow(
                        string PatID, 
                        string LastName, 
                        string FirstName, 
                        string MidInit, 
                        string ABO, 
                        string Relation, 
                        string DoctorName, 
                        string HospitalID, 
                        string Status, 
                        bool WP, 
                        bool UNOSActive, 
                        string Organ, 
                        bool Kidney, 
                        bool Pancreas, 
                        System.DateTime BirthDate, 
                        string Sex, 
                        string Race, 
                        string Disease, 
                        string LambdaName, 
                        bool ABOIncompatible, 
                        string ModifiedBy, 
                        System.DateTime ModifyDate, 
                        string PriorTransplants, 
                        string Comments, 
                        string Pregnancy, 
                        string Transfusion, 
                        bool SmallIntestine, 
                        bool Liver, 
                        bool BoneMarrow, 
                        bool Lung, 
                        bool Heart, 
                        bool AddOrgan1, 
                        bool AddOrgan2, 
                        string HIV, 
                        string UNOSNumber, 
                        bool Misc, 
                        bool QC, 
                        bool Islet, 
                        string Age, 
                        string HospitalPatID, 
                        string MNRID, 
                        bool Altruistic, 
                        bool Sensitized, 
                        string Donor_SSAN, 
                        bool Auto_AB, 
                        string Auto_AB_Text, 
                        bool Adsorb, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string Country, 
                        string Alias, 
                        string PatCode, 
                        bool NKRPat, 
                        string NKRCode, 
                        System.DateTime ListingDate, 
                        bool Hep_C, 
                        string A1_Subtype, 
                        string RBC_Ab, 
                        bool EDTA) {
                PatientsRow rowPatientsRow = ((PatientsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatID,
                        LastName,
                        FirstName,
                        MidInit,
                        ABO,
                        Relation,
                        DoctorName,
                        HospitalID,
                        Status,
                        WP,
                        UNOSActive,
                        Organ,
                        Kidney,
                        Pancreas,
                        BirthDate,
                        Sex,
                        Race,
                        Disease,
                        LambdaName,
                        ABOIncompatible,
                        ModifiedBy,
                        ModifyDate,
                        PriorTransplants,
                        Comments,
                        Pregnancy,
                        Transfusion,
                        SmallIntestine,
                        Liver,
                        BoneMarrow,
                        Lung,
                        Heart,
                        AddOrgan1,
                        AddOrgan2,
                        HIV,
                        UNOSNumber,
                        Misc,
                        QC,
                        Islet,
                        Age,
                        HospitalPatID,
                        MNRID,
                        Altruistic,
                        Sensitized,
                        Donor_SSAN,
                        Auto_AB,
                        Auto_AB_Text,
                        Adsorb,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Country,
                        Alias,
                        PatCode,
                        NKRPat,
                        NKRCode,
                        ListingDate,
                        Hep_C,
                        A1_Subtype,
                        RBC_Ab,
                        EDTA};
                rowPatientsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPatientsRow);
                return rowPatientsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsRow FindByPatID(string PatID) {
                return ((PatientsRow)(this.Rows.Find(new object[] {
                            PatID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PatientsDataTable cln = ((PatientsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PatientsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPatID = base.Columns["PatID"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMidInit = base.Columns["MidInit"];
                this.columnABO = base.Columns["ABO"];
                this.columnRelation = base.Columns["Relation"];
                this.columnDoctorName = base.Columns["DoctorName"];
                this.columnHospitalID = base.Columns["HospitalID"];
                this.columnStatus = base.Columns["Status"];
                this.columnWP = base.Columns["WP"];
                this.columnUNOSActive = base.Columns["UNOSActive"];
                this.columnOrgan = base.Columns["Organ"];
                this.columnKidney = base.Columns["Kidney"];
                this.columnPancreas = base.Columns["Pancreas"];
                this.columnBirthDate = base.Columns["BirthDate"];
                this.columnSex = base.Columns["Sex"];
                this.columnRace = base.Columns["Race"];
                this.columnDisease = base.Columns["Disease"];
                this.columnLambdaName = base.Columns["LambdaName"];
                this.columnABOIncompatible = base.Columns["ABOIncompatible"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifyDate = base.Columns["ModifyDate"];
                this.columnPriorTransplants = base.Columns["PriorTransplants"];
                this.columnComments = base.Columns["Comments"];
                this.columnPregnancy = base.Columns["Pregnancy"];
                this.columnTransfusion = base.Columns["Transfusion"];
                this.columnSmallIntestine = base.Columns["SmallIntestine"];
                this.columnLiver = base.Columns["Liver"];
                this.columnBoneMarrow = base.Columns["BoneMarrow"];
                this.columnLung = base.Columns["Lung"];
                this.columnHeart = base.Columns["Heart"];
                this.columnAddOrgan1 = base.Columns["AddOrgan1"];
                this.columnAddOrgan2 = base.Columns["AddOrgan2"];
                this.columnHIV = base.Columns["HIV"];
                this.columnUNOSNumber = base.Columns["UNOSNumber"];
                this.columnMisc = base.Columns["Misc"];
                this.columnQC = base.Columns["QC"];
                this.columnIslet = base.Columns["Islet"];
                this.columnAge = base.Columns["Age"];
                this.columnHospitalPatID = base.Columns["HospitalPatID"];
                this.columnMNRID = base.Columns["MNRID"];
                this.columnAltruistic = base.Columns["Altruistic"];
                this.columnSensitized = base.Columns["Sensitized"];
                this.columnDonor_SSAN = base.Columns["Donor_SSAN"];
                this.columnAuto_AB = base.Columns["Auto_AB"];
                this.columnAuto_AB_Text = base.Columns["Auto_AB_Text"];
                this.columnAdsorb = base.Columns["Adsorb"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnCountry = base.Columns["Country"];
                this.columnAlias = base.Columns["Alias"];
                this.columnPatCode = base.Columns["PatCode"];
                this.columnNKRPat = base.Columns["NKRPat"];
                this.columnNKRCode = base.Columns["NKRCode"];
                this.columnListingDate = base.Columns["ListingDate"];
                this.columnHep_C = base.Columns["Hep_C"];
                this.columnA1_Subtype = base.Columns["A1_Subtype"];
                this.columnRBC_Ab = base.Columns["RBC_Ab"];
                this.columnEDTA = base.Columns["EDTA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPatID = new global::System.Data.DataColumn("PatID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatID);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMidInit = new global::System.Data.DataColumn("MidInit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMidInit);
                this.columnABO = new global::System.Data.DataColumn("ABO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABO);
                this.columnRelation = new global::System.Data.DataColumn("Relation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelation);
                this.columnDoctorName = new global::System.Data.DataColumn("DoctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorName);
                this.columnHospitalID = new global::System.Data.DataColumn("HospitalID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospitalID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnWP = new global::System.Data.DataColumn("WP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWP);
                this.columnUNOSActive = new global::System.Data.DataColumn("UNOSActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNOSActive);
                this.columnOrgan = new global::System.Data.DataColumn("Organ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgan);
                this.columnKidney = new global::System.Data.DataColumn("Kidney", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKidney);
                this.columnPancreas = new global::System.Data.DataColumn("Pancreas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPancreas);
                this.columnBirthDate = new global::System.Data.DataColumn("BirthDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthDate);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnRace = new global::System.Data.DataColumn("Race", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRace);
                this.columnDisease = new global::System.Data.DataColumn("Disease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisease);
                this.columnLambdaName = new global::System.Data.DataColumn("LambdaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLambdaName);
                this.columnABOIncompatible = new global::System.Data.DataColumn("ABOIncompatible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABOIncompatible);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifyDate = new global::System.Data.DataColumn("ModifyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDate);
                this.columnPriorTransplants = new global::System.Data.DataColumn("PriorTransplants", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorTransplants);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnPregnancy = new global::System.Data.DataColumn("Pregnancy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregnancy);
                this.columnTransfusion = new global::System.Data.DataColumn("Transfusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransfusion);
                this.columnSmallIntestine = new global::System.Data.DataColumn("SmallIntestine", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmallIntestine);
                this.columnLiver = new global::System.Data.DataColumn("Liver", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiver);
                this.columnBoneMarrow = new global::System.Data.DataColumn("BoneMarrow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneMarrow);
                this.columnLung = new global::System.Data.DataColumn("Lung", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLung);
                this.columnHeart = new global::System.Data.DataColumn("Heart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeart);
                this.columnAddOrgan1 = new global::System.Data.DataColumn("AddOrgan1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddOrgan1);
                this.columnAddOrgan2 = new global::System.Data.DataColumn("AddOrgan2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddOrgan2);
                this.columnHIV = new global::System.Data.DataColumn("HIV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIV);
                this.columnUNOSNumber = new global::System.Data.DataColumn("UNOSNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNOSNumber);
                this.columnMisc = new global::System.Data.DataColumn("Misc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMisc);
                this.columnQC = new global::System.Data.DataColumn("QC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC);
                this.columnIslet = new global::System.Data.DataColumn("Islet", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIslet);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnHospitalPatID = new global::System.Data.DataColumn("HospitalPatID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospitalPatID);
                this.columnMNRID = new global::System.Data.DataColumn("MNRID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNRID);
                this.columnAltruistic = new global::System.Data.DataColumn("Altruistic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAltruistic);
                this.columnSensitized = new global::System.Data.DataColumn("Sensitized", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSensitized);
                this.columnDonor_SSAN = new global::System.Data.DataColumn("Donor_SSAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDonor_SSAN);
                this.columnAuto_AB = new global::System.Data.DataColumn("Auto_AB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuto_AB);
                this.columnAuto_AB_Text = new global::System.Data.DataColumn("Auto_AB_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuto_AB_Text);
                this.columnAdsorb = new global::System.Data.DataColumn("Adsorb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdsorb);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnAlias = new global::System.Data.DataColumn("Alias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlias);
                this.columnPatCode = new global::System.Data.DataColumn("PatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatCode);
                this.columnNKRPat = new global::System.Data.DataColumn("NKRPat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNKRPat);
                this.columnNKRCode = new global::System.Data.DataColumn("NKRCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNKRCode);
                this.columnListingDate = new global::System.Data.DataColumn("ListingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListingDate);
                this.columnHep_C = new global::System.Data.DataColumn("Hep_C", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHep_C);
                this.columnA1_Subtype = new global::System.Data.DataColumn("A1_Subtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1_Subtype);
                this.columnRBC_Ab = new global::System.Data.DataColumn("RBC_Ab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRBC_Ab);
                this.columnEDTA = new global::System.Data.DataColumn("EDTA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDTA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatID}, true));
                this.columnPatID.AllowDBNull = false;
                this.columnPatID.Unique = true;
                this.columnPatID.MaxLength = 12;
                this.columnLastName.MaxLength = 20;
                this.columnFirstName.MaxLength = 15;
                this.columnMidInit.MaxLength = 1;
                this.columnABO.MaxLength = 2;
                this.columnRelation.MaxLength = 10;
                this.columnDoctorName.MaxLength = 25;
                this.columnHospitalID.MaxLength = 4;
                this.columnStatus.MaxLength = 3;
                this.columnOrgan.MaxLength = 1;
                this.columnSex.MaxLength = 1;
                this.columnRace.MaxLength = 4;
                this.columnDisease.MaxLength = 15;
                this.columnLambdaName.MaxLength = 20;
                this.columnModifiedBy.MaxLength = 12;
                this.columnPriorTransplants.MaxLength = 1;
                this.columnComments.MaxLength = 200;
                this.columnPregnancy.MaxLength = 3;
                this.columnTransfusion.MaxLength = 3;
                this.columnHIV.MaxLength = 3;
                this.columnUNOSNumber.MaxLength = 7;
                this.columnAge.MaxLength = 2;
                this.columnHospitalPatID.MaxLength = 20;
                this.columnMNRID.MaxLength = 20;
                this.columnDonor_SSAN.MaxLength = 11;
                this.columnAuto_AB_Text.MaxLength = 50;
                this.columnAddress1.MaxLength = 100;
                this.columnAddress2.MaxLength = 100;
                this.columnCity.MaxLength = 30;
                this.columnState.MaxLength = 25;
                this.columnZip.MaxLength = 12;
                this.columnCountry.MaxLength = 50;
                this.columnAlias.MaxLength = 100;
                this.columnPatCode.MaxLength = 12;
                this.columnNKRCode.MaxLength = 12;
                this.columnA1_Subtype.MaxLength = 50;
                this.columnRBC_Ab.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsRow NewPatientsRow() {
                return ((PatientsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PatientsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PatientsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PatientsRowChanged != null)) {
                    this.PatientsRowChanged(this, new PatientsRowChangeEvent(((PatientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PatientsRowChanging != null)) {
                    this.PatientsRowChanging(this, new PatientsRowChangeEvent(((PatientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PatientsRowDeleted != null)) {
                    this.PatientsRowDeleted(this, new PatientsRowChangeEvent(((PatientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PatientsRowDeleting != null)) {
                    this.PatientsRowDeleting(this, new PatientsRowChangeEvent(((PatientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePatientsRow(PatientsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClearMini ds = new ClearMini();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PatientsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SamplesDataTable : global::System.Data.TypedTableBase<SamplesRow> {
            
            private global::System.Data.DataColumn columnLogNumber;
            
            private global::System.Data.DataColumn columnLogDateTime;
            
            private global::System.Data.DataColumn columnPatID;
            
            private global::System.Data.DataColumn columnSampleDate;
            
            private global::System.Data.DataColumn columnB;
            
            private global::System.Data.DataColumn columnS;
            
            private global::System.Data.DataColumn columnLN;
            
            private global::System.Data.DataColumn columnSP;
            
            private global::System.Data.DataColumn columnCells;
            
            private global::System.Data.DataColumn columnHLA_ABC;
            
            private global::System.Data.DataColumn columnHLA_DR;
            
            private global::System.Data.DataColumn columnABS;
            
            private global::System.Data.DataColumn columnNS;
            
            private global::System.Data.DataColumn columnNSNC;
            
            private global::System.Data.DataColumn columnXM_Auto;
            
            private global::System.Data.DataColumn columnXM_Donor;
            
            private global::System.Data.DataColumn columnXM_Final;
            
            private global::System.Data.DataColumn columnFreeze;
            
            private global::System.Data.DataColumn columnMLC;
            
            private global::System.Data.DataColumn columnHemolyze;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnFinalized;
            
            private global::System.Data.DataColumn columnMIQS;
            
            private global::System.Data.DataColumn columnMIQS_ID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifyDate;
            
            private global::System.Data.DataColumn columnAvailable;
            
            private global::System.Data.DataColumn columnKidney;
            
            private global::System.Data.DataColumn columnPancreas;
            
            private global::System.Data.DataColumn columnSmallIntestine;
            
            private global::System.Data.DataColumn columnLiver;
            
            private global::System.Data.DataColumn columnBoneMarrow;
            
            private global::System.Data.DataColumn columnLung;
            
            private global::System.Data.DataColumn columnHeart;
            
            private global::System.Data.DataColumn columnAddOrgan1;
            
            private global::System.Data.DataColumn columnAddOrgan2;
            
            private global::System.Data.DataColumn columnXM_Flow;
            
            private global::System.Data.DataColumn columnMisc;
            
            private global::System.Data.DataColumn columnQC;
            
            private global::System.Data.DataColumn columnABOTest;
            
            private global::System.Data.DataColumn columnIslet;
            
            private global::System.Data.DataColumn columnPostTransplant;
            
            private global::System.Data.DataColumn columnABC_CDC;
            
            private global::System.Data.DataColumn columnDR_CDC;
            
            private global::System.Data.DataColumn columnABC_DNA;
            
            private global::System.Data.DataColumn columnDR_DNA;
            
            private global::System.Data.DataColumn columnLuminex;
            
            private global::System.Data.DataColumn columnFast_Screen;
            
            private global::System.Data.DataColumn columnXM_CDC;
            
            private global::System.Data.DataColumn columnStandard;
            
            private global::System.Data.DataColumn columnRackNumber;
            
            private global::System.Data.DataColumn columnPRA_CL1;
            
            private global::System.Data.DataColumn columnPRA_CL2;
            
            private global::System.Data.DataColumn columnSA_CL1;
            
            private global::System.Data.DataColumn columnSA_CL2;
            
            private global::System.Data.DataColumn columnMixedBead;
            
            private global::System.Data.DataColumn columnQC_Comments;
            
            private global::System.Data.DataColumn columnNoQCIssues;
            
            private global::System.Data.DataColumn columnCreateBy;
            
            private global::System.Data.DataColumn columnAuto_Luminex_Comments;
            
            private global::System.Data.DataColumn columnSpecial_Handling;
            
            private global::System.Data.DataColumn columnStat_ABC_DR;
            
            private global::System.Data.DataColumn columnStat_SA_CL1;
            
            private global::System.Data.DataColumn columnStat_SA_CL2;
            
            private global::System.Data.DataColumn columnSuppress_Luminex;
            
            private global::System.Data.DataColumn columnMod_CL1;
            
            private global::System.Data.DataColumn columnMod_CL2;
            
            private global::System.Data.DataColumn columnStat_Mod_CL1;
            
            private global::System.Data.DataColumn columnStat_Mod_CL2;
            
            private global::System.Data.DataColumn columnAdsorb;
            
            private global::System.Data.DataColumn columnEDTA;
            
            private global::System.Data.DataColumn columnFilter;
            
            private global::System.Data.DataColumn columnDilution;
            
            private global::System.Data.DataColumn columnOther;
            
            private global::System.Data.DataColumn columnStat_ABC_Only;
            
            private global::System.Data.DataColumn columnABO_A1_Subtype_Test;
            
            private global::System.Data.DataColumn columnExpedited_Test;
            
            private global::System.Data.DataColumn columnAccessionNumber;
            
            private global::System.Data.DataColumn columnEDTAConfirm;
            
            private global::System.Data.DataColumn columnAdsorbConfirm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesDataTable() {
                this.TableName = "Samples";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SamplesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SamplesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LogNumberColumn {
                get {
                    return this.columnLogNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LogDateTimeColumn {
                get {
                    return this.columnLogDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatIDColumn {
                get {
                    return this.columnPatID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleDateColumn {
                get {
                    return this.columnSampleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BColumn {
                get {
                    return this.columnB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SColumn {
                get {
                    return this.columnS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LNColumn {
                get {
                    return this.columnLN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPColumn {
                get {
                    return this.columnSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CellsColumn {
                get {
                    return this.columnCells;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HLA_ABCColumn {
                get {
                    return this.columnHLA_ABC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HLA_DRColumn {
                get {
                    return this.columnHLA_DR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABSColumn {
                get {
                    return this.columnABS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NSColumn {
                get {
                    return this.columnNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NSNCColumn {
                get {
                    return this.columnNSNC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn XM_AutoColumn {
                get {
                    return this.columnXM_Auto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn XM_DonorColumn {
                get {
                    return this.columnXM_Donor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn XM_FinalColumn {
                get {
                    return this.columnXM_Final;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FreezeColumn {
                get {
                    return this.columnFreeze;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MLCColumn {
                get {
                    return this.columnMLC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HemolyzeColumn {
                get {
                    return this.columnHemolyze;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FinalizedColumn {
                get {
                    return this.columnFinalized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MIQSColumn {
                get {
                    return this.columnMIQS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MIQS_IDColumn {
                get {
                    return this.columnMIQS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ModifyDateColumn {
                get {
                    return this.columnModifyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AvailableColumn {
                get {
                    return this.columnAvailable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KidneyColumn {
                get {
                    return this.columnKidney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PancreasColumn {
                get {
                    return this.columnPancreas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SmallIntestineColumn {
                get {
                    return this.columnSmallIntestine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LiverColumn {
                get {
                    return this.columnLiver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BoneMarrowColumn {
                get {
                    return this.columnBoneMarrow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LungColumn {
                get {
                    return this.columnLung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HeartColumn {
                get {
                    return this.columnHeart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddOrgan1Column {
                get {
                    return this.columnAddOrgan1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddOrgan2Column {
                get {
                    return this.columnAddOrgan2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn XM_FlowColumn {
                get {
                    return this.columnXM_Flow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MiscColumn {
                get {
                    return this.columnMisc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QCColumn {
                get {
                    return this.columnQC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABOTestColumn {
                get {
                    return this.columnABOTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsletColumn {
                get {
                    return this.columnIslet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PostTransplantColumn {
                get {
                    return this.columnPostTransplant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABC_CDCColumn {
                get {
                    return this.columnABC_CDC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DR_CDCColumn {
                get {
                    return this.columnDR_CDC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABC_DNAColumn {
                get {
                    return this.columnABC_DNA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DR_DNAColumn {
                get {
                    return this.columnDR_DNA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LuminexColumn {
                get {
                    return this.columnLuminex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fast_ScreenColumn {
                get {
                    return this.columnFast_Screen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn XM_CDCColumn {
                get {
                    return this.columnXM_CDC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StandardColumn {
                get {
                    return this.columnStandard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RackNumberColumn {
                get {
                    return this.columnRackNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRA_CL1Column {
                get {
                    return this.columnPRA_CL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRA_CL2Column {
                get {
                    return this.columnPRA_CL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SA_CL1Column {
                get {
                    return this.columnSA_CL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SA_CL2Column {
                get {
                    return this.columnSA_CL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MixedBeadColumn {
                get {
                    return this.columnMixedBead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QC_CommentsColumn {
                get {
                    return this.columnQC_Comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoQCIssuesColumn {
                get {
                    return this.columnNoQCIssues;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreateByColumn {
                get {
                    return this.columnCreateBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Auto_Luminex_CommentsColumn {
                get {
                    return this.columnAuto_Luminex_Comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Special_HandlingColumn {
                get {
                    return this.columnSpecial_Handling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_ABC_DRColumn {
                get {
                    return this.columnStat_ABC_DR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SA_CL1Column {
                get {
                    return this.columnStat_SA_CL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SA_CL2Column {
                get {
                    return this.columnStat_SA_CL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Suppress_LuminexColumn {
                get {
                    return this.columnSuppress_Luminex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Mod_CL1Column {
                get {
                    return this.columnMod_CL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Mod_CL2Column {
                get {
                    return this.columnMod_CL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_Mod_CL1Column {
                get {
                    return this.columnStat_Mod_CL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_Mod_CL2Column {
                get {
                    return this.columnStat_Mod_CL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AdsorbColumn {
                get {
                    return this.columnAdsorb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDTAColumn {
                get {
                    return this.columnEDTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FilterColumn {
                get {
                    return this.columnFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DilutionColumn {
                get {
                    return this.columnDilution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OtherColumn {
                get {
                    return this.columnOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_ABC_OnlyColumn {
                get {
                    return this.columnStat_ABC_Only;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABO_A1_Subtype_TestColumn {
                get {
                    return this.columnABO_A1_Subtype_Test;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Expedited_TestColumn {
                get {
                    return this.columnExpedited_Test;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AccessionNumberColumn {
                get {
                    return this.columnAccessionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDTAConfirmColumn {
                get {
                    return this.columnEDTAConfirm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AdsorbConfirmColumn {
                get {
                    return this.columnAdsorbConfirm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesRow this[int index] {
                get {
                    return ((SamplesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SamplesRowChangeEventHandler SamplesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SamplesRowChangeEventHandler SamplesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SamplesRowChangeEventHandler SamplesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SamplesRowChangeEventHandler SamplesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSamplesRow(SamplesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesRow AddSamplesRow(
                        string LogNumber, 
                        System.DateTime LogDateTime, 
                        PatientsRow parentPatientsRowByPatientsSamples, 
                        System.DateTime SampleDate, 
                        bool B, 
                        bool S, 
                        bool LN, 
                        bool SP, 
                        bool Cells, 
                        bool HLA_ABC, 
                        bool HLA_DR, 
                        bool ABS, 
                        bool NS, 
                        bool NSNC, 
                        bool XM_Auto, 
                        bool XM_Donor, 
                        bool XM_Final, 
                        bool Freeze, 
                        bool MLC, 
                        bool Hemolyze, 
                        string Comments, 
                        bool Finalized, 
                        string MIQS, 
                        string MIQS_ID, 
                        string Status, 
                        string ModifiedBy, 
                        System.DateTime ModifyDate, 
                        string Available, 
                        bool Kidney, 
                        bool Pancreas, 
                        bool SmallIntestine, 
                        bool Liver, 
                        bool BoneMarrow, 
                        bool Lung, 
                        bool Heart, 
                        bool AddOrgan1, 
                        bool AddOrgan2, 
                        bool XM_Flow, 
                        bool Misc, 
                        bool QC, 
                        bool ABOTest, 
                        bool Islet, 
                        bool PostTransplant, 
                        bool ABC_CDC, 
                        bool DR_CDC, 
                        bool ABC_DNA, 
                        bool DR_DNA, 
                        bool Luminex, 
                        bool Fast_Screen, 
                        bool XM_CDC, 
                        bool Standard, 
                        string RackNumber, 
                        bool PRA_CL1, 
                        bool PRA_CL2, 
                        bool SA_CL1, 
                        bool SA_CL2, 
                        bool MixedBead, 
                        string QC_Comments, 
                        bool NoQCIssues, 
                        string CreateBy, 
                        string Auto_Luminex_Comments, 
                        bool Special_Handling, 
                        bool Stat_ABC_DR, 
                        bool Stat_SA_CL1, 
                        bool Stat_SA_CL2, 
                        bool Suppress_Luminex, 
                        bool Mod_CL1, 
                        bool Mod_CL2, 
                        bool Stat_Mod_CL1, 
                        bool Stat_Mod_CL2, 
                        bool Adsorb, 
                        bool EDTA, 
                        bool Filter, 
                        bool Dilution, 
                        bool Other, 
                        bool Stat_ABC_Only, 
                        bool ABO_A1_Subtype_Test, 
                        bool Expedited_Test, 
                        string AccessionNumber, 
                        bool EDTAConfirm, 
                        bool AdsorbConfirm) {
                SamplesRow rowSamplesRow = ((SamplesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LogNumber,
                        LogDateTime,
                        null,
                        SampleDate,
                        B,
                        S,
                        LN,
                        SP,
                        Cells,
                        HLA_ABC,
                        HLA_DR,
                        ABS,
                        NS,
                        NSNC,
                        XM_Auto,
                        XM_Donor,
                        XM_Final,
                        Freeze,
                        MLC,
                        Hemolyze,
                        Comments,
                        Finalized,
                        MIQS,
                        MIQS_ID,
                        Status,
                        ModifiedBy,
                        ModifyDate,
                        Available,
                        Kidney,
                        Pancreas,
                        SmallIntestine,
                        Liver,
                        BoneMarrow,
                        Lung,
                        Heart,
                        AddOrgan1,
                        AddOrgan2,
                        XM_Flow,
                        Misc,
                        QC,
                        ABOTest,
                        Islet,
                        PostTransplant,
                        ABC_CDC,
                        DR_CDC,
                        ABC_DNA,
                        DR_DNA,
                        Luminex,
                        Fast_Screen,
                        XM_CDC,
                        Standard,
                        RackNumber,
                        PRA_CL1,
                        PRA_CL2,
                        SA_CL1,
                        SA_CL2,
                        MixedBead,
                        QC_Comments,
                        NoQCIssues,
                        CreateBy,
                        Auto_Luminex_Comments,
                        Special_Handling,
                        Stat_ABC_DR,
                        Stat_SA_CL1,
                        Stat_SA_CL2,
                        Suppress_Luminex,
                        Mod_CL1,
                        Mod_CL2,
                        Stat_Mod_CL1,
                        Stat_Mod_CL2,
                        Adsorb,
                        EDTA,
                        Filter,
                        Dilution,
                        Other,
                        Stat_ABC_Only,
                        ABO_A1_Subtype_Test,
                        Expedited_Test,
                        AccessionNumber,
                        EDTAConfirm,
                        AdsorbConfirm};
                if ((parentPatientsRowByPatientsSamples != null)) {
                    columnValuesArray[2] = parentPatientsRowByPatientsSamples[0];
                }
                rowSamplesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSamplesRow);
                return rowSamplesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesRow FindByLogNumber(string LogNumber) {
                return ((SamplesRow)(this.Rows.Find(new object[] {
                            LogNumber})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SamplesDataTable cln = ((SamplesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SamplesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnLogNumber = base.Columns["LogNumber"];
                this.columnLogDateTime = base.Columns["LogDateTime"];
                this.columnPatID = base.Columns["PatID"];
                this.columnSampleDate = base.Columns["SampleDate"];
                this.columnB = base.Columns["B"];
                this.columnS = base.Columns["S"];
                this.columnLN = base.Columns["LN"];
                this.columnSP = base.Columns["SP"];
                this.columnCells = base.Columns["Cells"];
                this.columnHLA_ABC = base.Columns["HLA_ABC"];
                this.columnHLA_DR = base.Columns["HLA_DR"];
                this.columnABS = base.Columns["ABS"];
                this.columnNS = base.Columns["NS"];
                this.columnNSNC = base.Columns["NSNC"];
                this.columnXM_Auto = base.Columns["XM_Auto"];
                this.columnXM_Donor = base.Columns["XM_Donor"];
                this.columnXM_Final = base.Columns["XM_Final"];
                this.columnFreeze = base.Columns["Freeze"];
                this.columnMLC = base.Columns["MLC"];
                this.columnHemolyze = base.Columns["Hemolyze"];
                this.columnComments = base.Columns["Comments"];
                this.columnFinalized = base.Columns["Finalized"];
                this.columnMIQS = base.Columns["MIQS"];
                this.columnMIQS_ID = base.Columns["MIQS_ID"];
                this.columnStatus = base.Columns["Status"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifyDate = base.Columns["ModifyDate"];
                this.columnAvailable = base.Columns["Available"];
                this.columnKidney = base.Columns["Kidney"];
                this.columnPancreas = base.Columns["Pancreas"];
                this.columnSmallIntestine = base.Columns["SmallIntestine"];
                this.columnLiver = base.Columns["Liver"];
                this.columnBoneMarrow = base.Columns["BoneMarrow"];
                this.columnLung = base.Columns["Lung"];
                this.columnHeart = base.Columns["Heart"];
                this.columnAddOrgan1 = base.Columns["AddOrgan1"];
                this.columnAddOrgan2 = base.Columns["AddOrgan2"];
                this.columnXM_Flow = base.Columns["XM_Flow"];
                this.columnMisc = base.Columns["Misc"];
                this.columnQC = base.Columns["QC"];
                this.columnABOTest = base.Columns["ABOTest"];
                this.columnIslet = base.Columns["Islet"];
                this.columnPostTransplant = base.Columns["PostTransplant"];
                this.columnABC_CDC = base.Columns["ABC_CDC"];
                this.columnDR_CDC = base.Columns["DR_CDC"];
                this.columnABC_DNA = base.Columns["ABC_DNA"];
                this.columnDR_DNA = base.Columns["DR_DNA"];
                this.columnLuminex = base.Columns["Luminex"];
                this.columnFast_Screen = base.Columns["Fast_Screen"];
                this.columnXM_CDC = base.Columns["XM_CDC"];
                this.columnStandard = base.Columns["Standard"];
                this.columnRackNumber = base.Columns["RackNumber"];
                this.columnPRA_CL1 = base.Columns["PRA_CL1"];
                this.columnPRA_CL2 = base.Columns["PRA_CL2"];
                this.columnSA_CL1 = base.Columns["SA_CL1"];
                this.columnSA_CL2 = base.Columns["SA_CL2"];
                this.columnMixedBead = base.Columns["MixedBead"];
                this.columnQC_Comments = base.Columns["QC_Comments"];
                this.columnNoQCIssues = base.Columns["NoQCIssues"];
                this.columnCreateBy = base.Columns["CreateBy"];
                this.columnAuto_Luminex_Comments = base.Columns["Auto_Luminex_Comments"];
                this.columnSpecial_Handling = base.Columns["Special_Handling"];
                this.columnStat_ABC_DR = base.Columns["Stat_ABC_DR"];
                this.columnStat_SA_CL1 = base.Columns["Stat_SA_CL1"];
                this.columnStat_SA_CL2 = base.Columns["Stat_SA_CL2"];
                this.columnSuppress_Luminex = base.Columns["Suppress_Luminex"];
                this.columnMod_CL1 = base.Columns["Mod_CL1"];
                this.columnMod_CL2 = base.Columns["Mod_CL2"];
                this.columnStat_Mod_CL1 = base.Columns["Stat_Mod_CL1"];
                this.columnStat_Mod_CL2 = base.Columns["Stat_Mod_CL2"];
                this.columnAdsorb = base.Columns["Adsorb"];
                this.columnEDTA = base.Columns["EDTA"];
                this.columnFilter = base.Columns["Filter"];
                this.columnDilution = base.Columns["Dilution"];
                this.columnOther = base.Columns["Other"];
                this.columnStat_ABC_Only = base.Columns["Stat_ABC_Only"];
                this.columnABO_A1_Subtype_Test = base.Columns["ABO_A1_Subtype_Test"];
                this.columnExpedited_Test = base.Columns["Expedited_Test"];
                this.columnAccessionNumber = base.Columns["AccessionNumber"];
                this.columnEDTAConfirm = base.Columns["EDTAConfirm"];
                this.columnAdsorbConfirm = base.Columns["AdsorbConfirm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnLogNumber = new global::System.Data.DataColumn("LogNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogNumber);
                this.columnLogDateTime = new global::System.Data.DataColumn("LogDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogDateTime);
                this.columnPatID = new global::System.Data.DataColumn("PatID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatID);
                this.columnSampleDate = new global::System.Data.DataColumn("SampleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleDate);
                this.columnB = new global::System.Data.DataColumn("B", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB);
                this.columnS = new global::System.Data.DataColumn("S", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS);
                this.columnLN = new global::System.Data.DataColumn("LN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLN);
                this.columnSP = new global::System.Data.DataColumn("SP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSP);
                this.columnCells = new global::System.Data.DataColumn("Cells", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCells);
                this.columnHLA_ABC = new global::System.Data.DataColumn("HLA_ABC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHLA_ABC);
                this.columnHLA_DR = new global::System.Data.DataColumn("HLA_DR", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHLA_DR);
                this.columnABS = new global::System.Data.DataColumn("ABS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABS);
                this.columnNS = new global::System.Data.DataColumn("NS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNS);
                this.columnNSNC = new global::System.Data.DataColumn("NSNC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSNC);
                this.columnXM_Auto = new global::System.Data.DataColumn("XM_Auto", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXM_Auto);
                this.columnXM_Donor = new global::System.Data.DataColumn("XM_Donor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXM_Donor);
                this.columnXM_Final = new global::System.Data.DataColumn("XM_Final", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXM_Final);
                this.columnFreeze = new global::System.Data.DataColumn("Freeze", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeze);
                this.columnMLC = new global::System.Data.DataColumn("MLC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLC);
                this.columnHemolyze = new global::System.Data.DataColumn("Hemolyze", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHemolyze);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnFinalized = new global::System.Data.DataColumn("Finalized", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalized);
                this.columnMIQS = new global::System.Data.DataColumn("MIQS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIQS);
                this.columnMIQS_ID = new global::System.Data.DataColumn("MIQS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIQS_ID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifyDate = new global::System.Data.DataColumn("ModifyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDate);
                this.columnAvailable = new global::System.Data.DataColumn("Available", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailable);
                this.columnKidney = new global::System.Data.DataColumn("Kidney", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKidney);
                this.columnPancreas = new global::System.Data.DataColumn("Pancreas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPancreas);
                this.columnSmallIntestine = new global::System.Data.DataColumn("SmallIntestine", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmallIntestine);
                this.columnLiver = new global::System.Data.DataColumn("Liver", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiver);
                this.columnBoneMarrow = new global::System.Data.DataColumn("BoneMarrow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneMarrow);
                this.columnLung = new global::System.Data.DataColumn("Lung", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLung);
                this.columnHeart = new global::System.Data.DataColumn("Heart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeart);
                this.columnAddOrgan1 = new global::System.Data.DataColumn("AddOrgan1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddOrgan1);
                this.columnAddOrgan2 = new global::System.Data.DataColumn("AddOrgan2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddOrgan2);
                this.columnXM_Flow = new global::System.Data.DataColumn("XM_Flow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXM_Flow);
                this.columnMisc = new global::System.Data.DataColumn("Misc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMisc);
                this.columnQC = new global::System.Data.DataColumn("QC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC);
                this.columnABOTest = new global::System.Data.DataColumn("ABOTest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABOTest);
                this.columnIslet = new global::System.Data.DataColumn("Islet", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIslet);
                this.columnPostTransplant = new global::System.Data.DataColumn("PostTransplant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostTransplant);
                this.columnABC_CDC = new global::System.Data.DataColumn("ABC_CDC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABC_CDC);
                this.columnDR_CDC = new global::System.Data.DataColumn("DR_CDC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDR_CDC);
                this.columnABC_DNA = new global::System.Data.DataColumn("ABC_DNA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABC_DNA);
                this.columnDR_DNA = new global::System.Data.DataColumn("DR_DNA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDR_DNA);
                this.columnLuminex = new global::System.Data.DataColumn("Luminex", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLuminex);
                this.columnFast_Screen = new global::System.Data.DataColumn("Fast_Screen", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFast_Screen);
                this.columnXM_CDC = new global::System.Data.DataColumn("XM_CDC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXM_CDC);
                this.columnStandard = new global::System.Data.DataColumn("Standard", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandard);
                this.columnRackNumber = new global::System.Data.DataColumn("RackNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRackNumber);
                this.columnPRA_CL1 = new global::System.Data.DataColumn("PRA_CL1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRA_CL1);
                this.columnPRA_CL2 = new global::System.Data.DataColumn("PRA_CL2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRA_CL2);
                this.columnSA_CL1 = new global::System.Data.DataColumn("SA_CL1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_CL1);
                this.columnSA_CL2 = new global::System.Data.DataColumn("SA_CL2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_CL2);
                this.columnMixedBead = new global::System.Data.DataColumn("MixedBead", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMixedBead);
                this.columnQC_Comments = new global::System.Data.DataColumn("QC_Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC_Comments);
                this.columnNoQCIssues = new global::System.Data.DataColumn("NoQCIssues", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoQCIssues);
                this.columnCreateBy = new global::System.Data.DataColumn("CreateBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateBy);
                this.columnAuto_Luminex_Comments = new global::System.Data.DataColumn("Auto_Luminex_Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuto_Luminex_Comments);
                this.columnSpecial_Handling = new global::System.Data.DataColumn("Special_Handling", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecial_Handling);
                this.columnStat_ABC_DR = new global::System.Data.DataColumn("Stat_ABC_DR", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_ABC_DR);
                this.columnStat_SA_CL1 = new global::System.Data.DataColumn("Stat_SA_CL1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SA_CL1);
                this.columnStat_SA_CL2 = new global::System.Data.DataColumn("Stat_SA_CL2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SA_CL2);
                this.columnSuppress_Luminex = new global::System.Data.DataColumn("Suppress_Luminex", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppress_Luminex);
                this.columnMod_CL1 = new global::System.Data.DataColumn("Mod_CL1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMod_CL1);
                this.columnMod_CL2 = new global::System.Data.DataColumn("Mod_CL2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMod_CL2);
                this.columnStat_Mod_CL1 = new global::System.Data.DataColumn("Stat_Mod_CL1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_Mod_CL1);
                this.columnStat_Mod_CL2 = new global::System.Data.DataColumn("Stat_Mod_CL2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_Mod_CL2);
                this.columnAdsorb = new global::System.Data.DataColumn("Adsorb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdsorb);
                this.columnEDTA = new global::System.Data.DataColumn("EDTA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDTA);
                this.columnFilter = new global::System.Data.DataColumn("Filter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilter);
                this.columnDilution = new global::System.Data.DataColumn("Dilution", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDilution);
                this.columnOther = new global::System.Data.DataColumn("Other", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther);
                this.columnStat_ABC_Only = new global::System.Data.DataColumn("Stat_ABC_Only", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_ABC_Only);
                this.columnABO_A1_Subtype_Test = new global::System.Data.DataColumn("ABO_A1_Subtype_Test", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABO_A1_Subtype_Test);
                this.columnExpedited_Test = new global::System.Data.DataColumn("Expedited_Test", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpedited_Test);
                this.columnAccessionNumber = new global::System.Data.DataColumn("AccessionNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessionNumber);
                this.columnEDTAConfirm = new global::System.Data.DataColumn("EDTAConfirm", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDTAConfirm);
                this.columnAdsorbConfirm = new global::System.Data.DataColumn("AdsorbConfirm", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdsorbConfirm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLogNumber}, true));
                this.columnLogNumber.AllowDBNull = false;
                this.columnLogNumber.Unique = true;
                this.columnLogNumber.MaxLength = 12;
                this.columnPatID.MaxLength = 12;
                this.columnComments.MaxLength = 200;
                this.columnMIQS.MaxLength = 1;
                this.columnMIQS_ID.MaxLength = 12;
                this.columnStatus.MaxLength = 3;
                this.columnModifiedBy.MaxLength = 12;
                this.columnAvailable.MaxLength = 3;
                this.columnRackNumber.MaxLength = 3;
                this.columnQC_Comments.MaxLength = 255;
                this.columnCreateBy.MaxLength = 50;
                this.columnAuto_Luminex_Comments.MaxLength = 254;
                this.columnAccessionNumber.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesRow NewSamplesRow() {
                return ((SamplesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SamplesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SamplesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SamplesRowChanged != null)) {
                    this.SamplesRowChanged(this, new SamplesRowChangeEvent(((SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SamplesRowChanging != null)) {
                    this.SamplesRowChanging(this, new SamplesRowChangeEvent(((SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SamplesRowDeleted != null)) {
                    this.SamplesRowDeleted(this, new SamplesRowChangeEvent(((SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SamplesRowDeleting != null)) {
                    this.SamplesRowDeleting(this, new SamplesRowChangeEvent(((SamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSamplesRow(SamplesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClearMini ds = new ClearMini();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SamplesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PatientsRow : global::System.Data.DataRow {
            
            private PatientsDataTable tablePatients;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PatientsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePatients = ((PatientsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatID {
                get {
                    return ((string)(this[this.tablePatients.PatIDColumn]));
                }
                set {
                    this[this.tablePatients.PatIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tablePatients.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tablePatients.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MidInit {
                get {
                    try {
                        return ((string)(this[this.tablePatients.MidInitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MidInit\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.MidInitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ABO {
                get {
                    try {
                        return ((string)(this[this.tablePatients.ABOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABO\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.ABOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Relation {
                get {
                    try {
                        return ((string)(this[this.tablePatients.RelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relation\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.RelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DoctorName {
                get {
                    try {
                        return ((string)(this[this.tablePatients.DoctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorName\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.DoctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HospitalID {
                get {
                    try {
                        return ((string)(this[this.tablePatients.HospitalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HospitalID\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.HospitalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tablePatients.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool WP {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.WPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WP\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.WPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool UNOSActive {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.UNOSActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNOSActive\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.UNOSActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Organ {
                get {
                    try {
                        return ((string)(this[this.tablePatients.OrganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Organ\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.OrganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Kidney {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.KidneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kidney\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.KidneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Pancreas {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.PancreasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pancreas\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.PancreasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime BirthDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatients.BirthDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthDate\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.BirthDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tablePatients.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Race {
                get {
                    try {
                        return ((string)(this[this.tablePatients.RaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Race\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.RaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Disease {
                get {
                    try {
                        return ((string)(this[this.tablePatients.DiseaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disease\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.DiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LambdaName {
                get {
                    try {
                        return ((string)(this[this.tablePatients.LambdaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LambdaName\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.LambdaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABOIncompatible {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.ABOIncompatibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABOIncompatible\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.ABOIncompatibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ModifiedBy {
                get {
                    try {
                        return ((string)(this[this.tablePatients.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ModifyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatients.ModifyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifyDate\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.ModifyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PriorTransplants {
                get {
                    try {
                        return ((string)(this[this.tablePatients.PriorTransplantsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorTransplants\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.PriorTransplantsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tablePatients.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pregnancy {
                get {
                    try {
                        return ((string)(this[this.tablePatients.PregnancyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pregnancy\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.PregnancyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Transfusion {
                get {
                    try {
                        return ((string)(this[this.tablePatients.TransfusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transfusion\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.TransfusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SmallIntestine {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.SmallIntestineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SmallIntestine\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.SmallIntestineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Liver {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.LiverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Liver\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.LiverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BoneMarrow {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.BoneMarrowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneMarrow\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.BoneMarrowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Lung {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.LungColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lung\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.LungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Heart {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.HeartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heart\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.HeartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AddOrgan1 {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.AddOrgan1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddOrgan1\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.AddOrgan1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AddOrgan2 {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.AddOrgan2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddOrgan2\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.AddOrgan2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HIV {
                get {
                    try {
                        return ((string)(this[this.tablePatients.HIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIV\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.HIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UNOSNumber {
                get {
                    try {
                        return ((string)(this[this.tablePatients.UNOSNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNOSNumber\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.UNOSNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Misc {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.MiscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Misc\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.MiscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool QC {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.QCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QC\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.QCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Islet {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.IsletColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Islet\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.IsletColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tablePatients.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HospitalPatID {
                get {
                    try {
                        return ((string)(this[this.tablePatients.HospitalPatIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HospitalPatID\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.HospitalPatIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MNRID {
                get {
                    try {
                        return ((string)(this[this.tablePatients.MNRIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MNRID\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.MNRIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Altruistic {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.AltruisticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Altruistic\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.AltruisticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Sensitized {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.SensitizedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sensitized\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.SensitizedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Donor_SSAN {
                get {
                    try {
                        return ((string)(this[this.tablePatients.Donor_SSANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Donor_SSAN\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.Donor_SSANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Auto_AB {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.Auto_ABColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Auto_AB\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.Auto_ABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Auto_AB_Text {
                get {
                    try {
                        return ((string)(this[this.tablePatients.Auto_AB_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Auto_AB_Text\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.Auto_AB_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Adsorb {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.AdsorbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adsorb\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.AdsorbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tablePatients.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tablePatients.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablePatients.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablePatients.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tablePatients.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tablePatients.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Alias {
                get {
                    try {
                        return ((string)(this[this.tablePatients.AliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alias\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.AliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatCode {
                get {
                    try {
                        return ((string)(this[this.tablePatients.PatCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatCode\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.PatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NKRPat {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.NKRPatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NKRPat\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.NKRPatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NKRCode {
                get {
                    try {
                        return ((string)(this[this.tablePatients.NKRCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NKRCode\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.NKRCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ListingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatients.ListingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ListingDate\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.ListingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Hep_C {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.Hep_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hep_C\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.Hep_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string A1_Subtype {
                get {
                    try {
                        return ((string)(this[this.tablePatients.A1_SubtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A1_Subtype\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.A1_SubtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RBC_Ab {
                get {
                    try {
                        return ((string)(this[this.tablePatients.RBC_AbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RBC_Ab\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.RBC_AbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EDTA {
                get {
                    try {
                        return ((bool)(this[this.tablePatients.EDTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDTA\' in table \'Patients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatients.EDTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tablePatients.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastNameNull() {
                this[this.tablePatients.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tablePatients.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tablePatients.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMidInitNull() {
                return this.IsNull(this.tablePatients.MidInitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMidInitNull() {
                this[this.tablePatients.MidInitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsABONull() {
                return this.IsNull(this.tablePatients.ABOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetABONull() {
                this[this.tablePatients.ABOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRelationNull() {
                return this.IsNull(this.tablePatients.RelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRelationNull() {
                this[this.tablePatients.RelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDoctorNameNull() {
                return this.IsNull(this.tablePatients.DoctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDoctorNameNull() {
                this[this.tablePatients.DoctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHospitalIDNull() {
                return this.IsNull(this.tablePatients.HospitalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHospitalIDNull() {
                this[this.tablePatients.HospitalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatusNull() {
                return this.IsNull(this.tablePatients.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatusNull() {
                this[this.tablePatients.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWPNull() {
                return this.IsNull(this.tablePatients.WPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWPNull() {
                this[this.tablePatients.WPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUNOSActiveNull() {
                return this.IsNull(this.tablePatients.UNOSActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUNOSActiveNull() {
                this[this.tablePatients.UNOSActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOrganNull() {
                return this.IsNull(this.tablePatients.OrganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOrganNull() {
                this[this.tablePatients.OrganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKidneyNull() {
                return this.IsNull(this.tablePatients.KidneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKidneyNull() {
                this[this.tablePatients.KidneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPancreasNull() {
                return this.IsNull(this.tablePatients.PancreasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPancreasNull() {
                this[this.tablePatients.PancreasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBirthDateNull() {
                return this.IsNull(this.tablePatients.BirthDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBirthDateNull() {
                this[this.tablePatients.BirthDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSexNull() {
                return this.IsNull(this.tablePatients.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSexNull() {
                this[this.tablePatients.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRaceNull() {
                return this.IsNull(this.tablePatients.RaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRaceNull() {
                this[this.tablePatients.RaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDiseaseNull() {
                return this.IsNull(this.tablePatients.DiseaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDiseaseNull() {
                this[this.tablePatients.DiseaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLambdaNameNull() {
                return this.IsNull(this.tablePatients.LambdaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLambdaNameNull() {
                this[this.tablePatients.LambdaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsABOIncompatibleNull() {
                return this.IsNull(this.tablePatients.ABOIncompatibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetABOIncompatibleNull() {
                this[this.tablePatients.ABOIncompatibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tablePatients.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetModifiedByNull() {
                this[this.tablePatients.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsModifyDateNull() {
                return this.IsNull(this.tablePatients.ModifyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetModifyDateNull() {
                this[this.tablePatients.ModifyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPriorTransplantsNull() {
                return this.IsNull(this.tablePatients.PriorTransplantsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPriorTransplantsNull() {
                this[this.tablePatients.PriorTransplantsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tablePatients.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentsNull() {
                this[this.tablePatients.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPregnancyNull() {
                return this.IsNull(this.tablePatients.PregnancyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPregnancyNull() {
                this[this.tablePatients.PregnancyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTransfusionNull() {
                return this.IsNull(this.tablePatients.TransfusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTransfusionNull() {
                this[this.tablePatients.TransfusionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSmallIntestineNull() {
                return this.IsNull(this.tablePatients.SmallIntestineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSmallIntestineNull() {
                this[this.tablePatients.SmallIntestineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLiverNull() {
                return this.IsNull(this.tablePatients.LiverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLiverNull() {
                this[this.tablePatients.LiverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBoneMarrowNull() {
                return this.IsNull(this.tablePatients.BoneMarrowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBoneMarrowNull() {
                this[this.tablePatients.BoneMarrowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLungNull() {
                return this.IsNull(this.tablePatients.LungColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLungNull() {
                this[this.tablePatients.LungColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHeartNull() {
                return this.IsNull(this.tablePatients.HeartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHeartNull() {
                this[this.tablePatients.HeartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAddOrgan1Null() {
                return this.IsNull(this.tablePatients.AddOrgan1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAddOrgan1Null() {
                this[this.tablePatients.AddOrgan1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAddOrgan2Null() {
                return this.IsNull(this.tablePatients.AddOrgan2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAddOrgan2Null() {
                this[this.tablePatients.AddOrgan2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHIVNull() {
                return this.IsNull(this.tablePatients.HIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHIVNull() {
                this[this.tablePatients.HIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUNOSNumberNull() {
                return this.IsNull(this.tablePatients.UNOSNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUNOSNumberNull() {
                this[this.tablePatients.UNOSNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMiscNull() {
                return this.IsNull(this.tablePatients.MiscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMiscNull() {
                this[this.tablePatients.MiscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQCNull() {
                return this.IsNull(this.tablePatients.QCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQCNull() {
                this[this.tablePatients.QCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsletNull() {
                return this.IsNull(this.tablePatients.IsletColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsletNull() {
                this[this.tablePatients.IsletColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tablePatients.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAgeNull() {
                this[this.tablePatients.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHospitalPatIDNull() {
                return this.IsNull(this.tablePatients.HospitalPatIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHospitalPatIDNull() {
                this[this.tablePatients.HospitalPatIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMNRIDNull() {
                return this.IsNull(this.tablePatients.MNRIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMNRIDNull() {
                this[this.tablePatients.MNRIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAltruisticNull() {
                return this.IsNull(this.tablePatients.AltruisticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAltruisticNull() {
                this[this.tablePatients.AltruisticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSensitizedNull() {
                return this.IsNull(this.tablePatients.SensitizedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSensitizedNull() {
                this[this.tablePatients.SensitizedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDonor_SSANNull() {
                return this.IsNull(this.tablePatients.Donor_SSANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDonor_SSANNull() {
                this[this.tablePatients.Donor_SSANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAuto_ABNull() {
                return this.IsNull(this.tablePatients.Auto_ABColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAuto_ABNull() {
                this[this.tablePatients.Auto_ABColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAuto_AB_TextNull() {
                return this.IsNull(this.tablePatients.Auto_AB_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAuto_AB_TextNull() {
                this[this.tablePatients.Auto_AB_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdsorbNull() {
                return this.IsNull(this.tablePatients.AdsorbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdsorbNull() {
                this[this.tablePatients.AdsorbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAddress1Null() {
                return this.IsNull(this.tablePatients.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAddress1Null() {
                this[this.tablePatients.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAddress2Null() {
                return this.IsNull(this.tablePatients.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAddress2Null() {
                this[this.tablePatients.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tablePatients.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCityNull() {
                this[this.tablePatients.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStateNull() {
                return this.IsNull(this.tablePatients.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStateNull() {
                this[this.tablePatients.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsZipNull() {
                return this.IsNull(this.tablePatients.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetZipNull() {
                this[this.tablePatients.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tablePatients.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCountryNull() {
                this[this.tablePatients.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAliasNull() {
                return this.IsNull(this.tablePatients.AliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAliasNull() {
                this[this.tablePatients.AliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPatCodeNull() {
                return this.IsNull(this.tablePatients.PatCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPatCodeNull() {
                this[this.tablePatients.PatCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNKRPatNull() {
                return this.IsNull(this.tablePatients.NKRPatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNKRPatNull() {
                this[this.tablePatients.NKRPatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNKRCodeNull() {
                return this.IsNull(this.tablePatients.NKRCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNKRCodeNull() {
                this[this.tablePatients.NKRCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsListingDateNull() {
                return this.IsNull(this.tablePatients.ListingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetListingDateNull() {
                this[this.tablePatients.ListingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHep_CNull() {
                return this.IsNull(this.tablePatients.Hep_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHep_CNull() {
                this[this.tablePatients.Hep_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA1_SubtypeNull() {
                return this.IsNull(this.tablePatients.A1_SubtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA1_SubtypeNull() {
                this[this.tablePatients.A1_SubtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRBC_AbNull() {
                return this.IsNull(this.tablePatients.RBC_AbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRBC_AbNull() {
                this[this.tablePatients.RBC_AbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEDTANull() {
                return this.IsNull(this.tablePatients.EDTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEDTANull() {
                this[this.tablePatients.EDTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesRow[] GetSamplesRows() {
                if ((this.Table.ChildRelations["PatientsSamples"] == null)) {
                    return new SamplesRow[0];
                }
                else {
                    return ((SamplesRow[])(base.GetChildRows(this.Table.ChildRelations["PatientsSamples"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SamplesRow : global::System.Data.DataRow {
            
            private SamplesDataTable tableSamples;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SamplesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSamples = ((SamplesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LogNumber {
                get {
                    return ((string)(this[this.tableSamples.LogNumberColumn]));
                }
                set {
                    this[this.tableSamples.LogNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LogDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSamples.LogDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogDateTime\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.LogDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatID {
                get {
                    try {
                        return ((string)(this[this.tableSamples.PatIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatID\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.PatIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SampleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSamples.SampleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleDate\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.SampleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool B {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool S {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LN {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.LNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LN\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.LNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SP {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.SPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SP\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Cells {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.CellsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cells\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.CellsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HLA_ABC {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.HLA_ABCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HLA_ABC\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.HLA_ABCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HLA_DR {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.HLA_DRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HLA_DR\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.HLA_DRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABS {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.ABSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABS\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.ABSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NS {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.NSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NS\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.NSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NSNC {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.NSNCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSNC\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.NSNCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool XM_Auto {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.XM_AutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XM_Auto\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.XM_AutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool XM_Donor {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.XM_DonorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XM_Donor\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.XM_DonorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool XM_Final {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.XM_FinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XM_Final\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.XM_FinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Freeze {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.FreezeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Freeze\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.FreezeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool MLC {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.MLCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLC\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.MLCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Hemolyze {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.HemolyzeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hemolyze\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.HemolyzeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableSamples.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Finalized {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.FinalizedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finalized\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.FinalizedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MIQS {
                get {
                    try {
                        return ((string)(this[this.tableSamples.MIQSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIQS\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.MIQSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MIQS_ID {
                get {
                    try {
                        return ((string)(this[this.tableSamples.MIQS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIQS_ID\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.MIQS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableSamples.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ModifiedBy {
                get {
                    try {
                        return ((string)(this[this.tableSamples.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ModifyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSamples.ModifyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifyDate\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.ModifyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Available {
                get {
                    try {
                        return ((string)(this[this.tableSamples.AvailableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Available\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.AvailableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Kidney {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.KidneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kidney\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.KidneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Pancreas {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.PancreasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pancreas\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.PancreasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SmallIntestine {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.SmallIntestineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SmallIntestine\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.SmallIntestineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Liver {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.LiverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Liver\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.LiverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BoneMarrow {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.BoneMarrowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneMarrow\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.BoneMarrowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Lung {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.LungColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lung\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.LungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Heart {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.HeartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heart\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.HeartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AddOrgan1 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.AddOrgan1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddOrgan1\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.AddOrgan1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AddOrgan2 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.AddOrgan2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddOrgan2\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.AddOrgan2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool XM_Flow {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.XM_FlowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XM_Flow\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.XM_FlowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Misc {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.MiscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Misc\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.MiscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool QC {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.QCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QC\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.QCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABOTest {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.ABOTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABOTest\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.ABOTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Islet {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.IsletColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Islet\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.IsletColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PostTransplant {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.PostTransplantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostTransplant\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.PostTransplantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABC_CDC {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.ABC_CDCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABC_CDC\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.ABC_CDCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool DR_CDC {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.DR_CDCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DR_CDC\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.DR_CDCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABC_DNA {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.ABC_DNAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABC_DNA\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.ABC_DNAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool DR_DNA {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.DR_DNAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DR_DNA\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.DR_DNAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Luminex {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.LuminexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Luminex\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.LuminexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Fast_Screen {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Fast_ScreenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fast_Screen\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Fast_ScreenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool XM_CDC {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.XM_CDCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XM_CDC\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.XM_CDCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Standard {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.StandardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Standard\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.StandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RackNumber {
                get {
                    try {
                        return ((string)(this[this.tableSamples.RackNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RackNumber\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.RackNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PRA_CL1 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.PRA_CL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRA_CL1\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.PRA_CL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PRA_CL2 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.PRA_CL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRA_CL2\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.PRA_CL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SA_CL1 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.SA_CL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SA_CL1\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.SA_CL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SA_CL2 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.SA_CL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SA_CL2\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.SA_CL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool MixedBead {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.MixedBeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MixedBead\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.MixedBeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string QC_Comments {
                get {
                    try {
                        return ((string)(this[this.tableSamples.QC_CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QC_Comments\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.QC_CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NoQCIssues {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.NoQCIssuesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoQCIssues\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.NoQCIssuesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreateBy {
                get {
                    try {
                        return ((string)(this[this.tableSamples.CreateByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateBy\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.CreateByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Auto_Luminex_Comments {
                get {
                    try {
                        return ((string)(this[this.tableSamples.Auto_Luminex_CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Auto_Luminex_Comments\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Auto_Luminex_CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Special_Handling {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Special_HandlingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Special_Handling\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Special_HandlingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_ABC_DR {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Stat_ABC_DRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_ABC_DR\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Stat_ABC_DRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_SA_CL1 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Stat_SA_CL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_SA_CL1\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Stat_SA_CL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_SA_CL2 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Stat_SA_CL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_SA_CL2\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Stat_SA_CL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Suppress_Luminex {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Suppress_LuminexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Suppress_Luminex\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Suppress_LuminexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Mod_CL1 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Mod_CL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mod_CL1\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Mod_CL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Mod_CL2 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Mod_CL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mod_CL2\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Mod_CL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_Mod_CL1 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Stat_Mod_CL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_Mod_CL1\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Stat_Mod_CL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_Mod_CL2 {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Stat_Mod_CL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_Mod_CL2\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Stat_Mod_CL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Adsorb {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.AdsorbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adsorb\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.AdsorbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EDTA {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.EDTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDTA\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.EDTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Filter {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.FilterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Filter\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.FilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Dilution {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.DilutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dilution\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.DilutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Other {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.OtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.OtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_ABC_Only {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Stat_ABC_OnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_ABC_Only\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Stat_ABC_OnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABO_A1_Subtype_Test {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.ABO_A1_Subtype_TestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABO_A1_Subtype_Test\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.ABO_A1_Subtype_TestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Expedited_Test {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.Expedited_TestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expedited_Test\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.Expedited_TestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AccessionNumber {
                get {
                    try {
                        return ((string)(this[this.tableSamples.AccessionNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessionNumber\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.AccessionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EDTAConfirm {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.EDTAConfirmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDTAConfirm\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.EDTAConfirmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AdsorbConfirm {
                get {
                    try {
                        return ((bool)(this[this.tableSamples.AdsorbConfirmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdsorbConfirm\' in table \'Samples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSamples.AdsorbConfirmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsRow PatientsRow {
                get {
                    return ((PatientsRow)(this.GetParentRow(this.Table.ParentRelations["PatientsSamples"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PatientsSamples"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLogDateTimeNull() {
                return this.IsNull(this.tableSamples.LogDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLogDateTimeNull() {
                this[this.tableSamples.LogDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPatIDNull() {
                return this.IsNull(this.tableSamples.PatIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPatIDNull() {
                this[this.tableSamples.PatIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleDateNull() {
                return this.IsNull(this.tableSamples.SampleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleDateNull() {
                this[this.tableSamples.SampleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBNull() {
                return this.IsNull(this.tableSamples.BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBNull() {
                this[this.tableSamples.BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSNull() {
                return this.IsNull(this.tableSamples.SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSNull() {
                this[this.tableSamples.SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLNNull() {
                return this.IsNull(this.tableSamples.LNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLNNull() {
                this[this.tableSamples.LNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSPNull() {
                return this.IsNull(this.tableSamples.SPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSPNull() {
                this[this.tableSamples.SPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCellsNull() {
                return this.IsNull(this.tableSamples.CellsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCellsNull() {
                this[this.tableSamples.CellsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHLA_ABCNull() {
                return this.IsNull(this.tableSamples.HLA_ABCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHLA_ABCNull() {
                this[this.tableSamples.HLA_ABCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHLA_DRNull() {
                return this.IsNull(this.tableSamples.HLA_DRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHLA_DRNull() {
                this[this.tableSamples.HLA_DRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsABSNull() {
                return this.IsNull(this.tableSamples.ABSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetABSNull() {
                this[this.tableSamples.ABSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNSNull() {
                return this.IsNull(this.tableSamples.NSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNSNull() {
                this[this.tableSamples.NSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNSNCNull() {
                return this.IsNull(this.tableSamples.NSNCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNSNCNull() {
                this[this.tableSamples.NSNCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsXM_AutoNull() {
                return this.IsNull(this.tableSamples.XM_AutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetXM_AutoNull() {
                this[this.tableSamples.XM_AutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsXM_DonorNull() {
                return this.IsNull(this.tableSamples.XM_DonorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetXM_DonorNull() {
                this[this.tableSamples.XM_DonorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsXM_FinalNull() {
                return this.IsNull(this.tableSamples.XM_FinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetXM_FinalNull() {
                this[this.tableSamples.XM_FinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFreezeNull() {
                return this.IsNull(this.tableSamples.FreezeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFreezeNull() {
                this[this.tableSamples.FreezeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMLCNull() {
                return this.IsNull(this.tableSamples.MLCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMLCNull() {
                this[this.tableSamples.MLCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHemolyzeNull() {
                return this.IsNull(this.tableSamples.HemolyzeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHemolyzeNull() {
                this[this.tableSamples.HemolyzeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableSamples.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableSamples.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFinalizedNull() {
                return this.IsNull(this.tableSamples.FinalizedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFinalizedNull() {
                this[this.tableSamples.FinalizedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMIQSNull() {
                return this.IsNull(this.tableSamples.MIQSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMIQSNull() {
                this[this.tableSamples.MIQSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMIQS_IDNull() {
                return this.IsNull(this.tableSamples.MIQS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMIQS_IDNull() {
                this[this.tableSamples.MIQS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatusNull() {
                return this.IsNull(this.tableSamples.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatusNull() {
                this[this.tableSamples.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableSamples.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetModifiedByNull() {
                this[this.tableSamples.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsModifyDateNull() {
                return this.IsNull(this.tableSamples.ModifyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetModifyDateNull() {
                this[this.tableSamples.ModifyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAvailableNull() {
                return this.IsNull(this.tableSamples.AvailableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAvailableNull() {
                this[this.tableSamples.AvailableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKidneyNull() {
                return this.IsNull(this.tableSamples.KidneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKidneyNull() {
                this[this.tableSamples.KidneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPancreasNull() {
                return this.IsNull(this.tableSamples.PancreasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPancreasNull() {
                this[this.tableSamples.PancreasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSmallIntestineNull() {
                return this.IsNull(this.tableSamples.SmallIntestineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSmallIntestineNull() {
                this[this.tableSamples.SmallIntestineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLiverNull() {
                return this.IsNull(this.tableSamples.LiverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLiverNull() {
                this[this.tableSamples.LiverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBoneMarrowNull() {
                return this.IsNull(this.tableSamples.BoneMarrowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBoneMarrowNull() {
                this[this.tableSamples.BoneMarrowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLungNull() {
                return this.IsNull(this.tableSamples.LungColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLungNull() {
                this[this.tableSamples.LungColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHeartNull() {
                return this.IsNull(this.tableSamples.HeartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHeartNull() {
                this[this.tableSamples.HeartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAddOrgan1Null() {
                return this.IsNull(this.tableSamples.AddOrgan1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAddOrgan1Null() {
                this[this.tableSamples.AddOrgan1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAddOrgan2Null() {
                return this.IsNull(this.tableSamples.AddOrgan2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAddOrgan2Null() {
                this[this.tableSamples.AddOrgan2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsXM_FlowNull() {
                return this.IsNull(this.tableSamples.XM_FlowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetXM_FlowNull() {
                this[this.tableSamples.XM_FlowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMiscNull() {
                return this.IsNull(this.tableSamples.MiscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMiscNull() {
                this[this.tableSamples.MiscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQCNull() {
                return this.IsNull(this.tableSamples.QCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQCNull() {
                this[this.tableSamples.QCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsABOTestNull() {
                return this.IsNull(this.tableSamples.ABOTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetABOTestNull() {
                this[this.tableSamples.ABOTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsletNull() {
                return this.IsNull(this.tableSamples.IsletColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsletNull() {
                this[this.tableSamples.IsletColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPostTransplantNull() {
                return this.IsNull(this.tableSamples.PostTransplantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPostTransplantNull() {
                this[this.tableSamples.PostTransplantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsABC_CDCNull() {
                return this.IsNull(this.tableSamples.ABC_CDCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetABC_CDCNull() {
                this[this.tableSamples.ABC_CDCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDR_CDCNull() {
                return this.IsNull(this.tableSamples.DR_CDCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDR_CDCNull() {
                this[this.tableSamples.DR_CDCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsABC_DNANull() {
                return this.IsNull(this.tableSamples.ABC_DNAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetABC_DNANull() {
                this[this.tableSamples.ABC_DNAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDR_DNANull() {
                return this.IsNull(this.tableSamples.DR_DNAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDR_DNANull() {
                this[this.tableSamples.DR_DNAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLuminexNull() {
                return this.IsNull(this.tableSamples.LuminexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLuminexNull() {
                this[this.tableSamples.LuminexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFast_ScreenNull() {
                return this.IsNull(this.tableSamples.Fast_ScreenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFast_ScreenNull() {
                this[this.tableSamples.Fast_ScreenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsXM_CDCNull() {
                return this.IsNull(this.tableSamples.XM_CDCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetXM_CDCNull() {
                this[this.tableSamples.XM_CDCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStandardNull() {
                return this.IsNull(this.tableSamples.StandardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStandardNull() {
                this[this.tableSamples.StandardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRackNumberNull() {
                return this.IsNull(this.tableSamples.RackNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRackNumberNull() {
                this[this.tableSamples.RackNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRA_CL1Null() {
                return this.IsNull(this.tableSamples.PRA_CL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRA_CL1Null() {
                this[this.tableSamples.PRA_CL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRA_CL2Null() {
                return this.IsNull(this.tableSamples.PRA_CL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRA_CL2Null() {
                this[this.tableSamples.PRA_CL2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSA_CL1Null() {
                return this.IsNull(this.tableSamples.SA_CL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSA_CL1Null() {
                this[this.tableSamples.SA_CL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSA_CL2Null() {
                return this.IsNull(this.tableSamples.SA_CL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSA_CL2Null() {
                this[this.tableSamples.SA_CL2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMixedBeadNull() {
                return this.IsNull(this.tableSamples.MixedBeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMixedBeadNull() {
                this[this.tableSamples.MixedBeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQC_CommentsNull() {
                return this.IsNull(this.tableSamples.QC_CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQC_CommentsNull() {
                this[this.tableSamples.QC_CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoQCIssuesNull() {
                return this.IsNull(this.tableSamples.NoQCIssuesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoQCIssuesNull() {
                this[this.tableSamples.NoQCIssuesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreateByNull() {
                return this.IsNull(this.tableSamples.CreateByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreateByNull() {
                this[this.tableSamples.CreateByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAuto_Luminex_CommentsNull() {
                return this.IsNull(this.tableSamples.Auto_Luminex_CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAuto_Luminex_CommentsNull() {
                this[this.tableSamples.Auto_Luminex_CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpecial_HandlingNull() {
                return this.IsNull(this.tableSamples.Special_HandlingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpecial_HandlingNull() {
                this[this.tableSamples.Special_HandlingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_ABC_DRNull() {
                return this.IsNull(this.tableSamples.Stat_ABC_DRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_ABC_DRNull() {
                this[this.tableSamples.Stat_ABC_DRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_SA_CL1Null() {
                return this.IsNull(this.tableSamples.Stat_SA_CL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_SA_CL1Null() {
                this[this.tableSamples.Stat_SA_CL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_SA_CL2Null() {
                return this.IsNull(this.tableSamples.Stat_SA_CL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_SA_CL2Null() {
                this[this.tableSamples.Stat_SA_CL2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSuppress_LuminexNull() {
                return this.IsNull(this.tableSamples.Suppress_LuminexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSuppress_LuminexNull() {
                this[this.tableSamples.Suppress_LuminexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMod_CL1Null() {
                return this.IsNull(this.tableSamples.Mod_CL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMod_CL1Null() {
                this[this.tableSamples.Mod_CL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMod_CL2Null() {
                return this.IsNull(this.tableSamples.Mod_CL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMod_CL2Null() {
                this[this.tableSamples.Mod_CL2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_Mod_CL1Null() {
                return this.IsNull(this.tableSamples.Stat_Mod_CL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_Mod_CL1Null() {
                this[this.tableSamples.Stat_Mod_CL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_Mod_CL2Null() {
                return this.IsNull(this.tableSamples.Stat_Mod_CL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_Mod_CL2Null() {
                this[this.tableSamples.Stat_Mod_CL2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdsorbNull() {
                return this.IsNull(this.tableSamples.AdsorbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdsorbNull() {
                this[this.tableSamples.AdsorbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEDTANull() {
                return this.IsNull(this.tableSamples.EDTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEDTANull() {
                this[this.tableSamples.EDTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFilterNull() {
                return this.IsNull(this.tableSamples.FilterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFilterNull() {
                this[this.tableSamples.FilterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDilutionNull() {
                return this.IsNull(this.tableSamples.DilutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDilutionNull() {
                this[this.tableSamples.DilutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOtherNull() {
                return this.IsNull(this.tableSamples.OtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOtherNull() {
                this[this.tableSamples.OtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_ABC_OnlyNull() {
                return this.IsNull(this.tableSamples.Stat_ABC_OnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_ABC_OnlyNull() {
                this[this.tableSamples.Stat_ABC_OnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsABO_A1_Subtype_TestNull() {
                return this.IsNull(this.tableSamples.ABO_A1_Subtype_TestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetABO_A1_Subtype_TestNull() {
                this[this.tableSamples.ABO_A1_Subtype_TestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExpedited_TestNull() {
                return this.IsNull(this.tableSamples.Expedited_TestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExpedited_TestNull() {
                this[this.tableSamples.Expedited_TestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAccessionNumberNull() {
                return this.IsNull(this.tableSamples.AccessionNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAccessionNumberNull() {
                this[this.tableSamples.AccessionNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEDTAConfirmNull() {
                return this.IsNull(this.tableSamples.EDTAConfirmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEDTAConfirmNull() {
                this[this.tableSamples.EDTAConfirmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdsorbConfirmNull() {
                return this.IsNull(this.tableSamples.AdsorbConfirmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdsorbConfirmNull() {
                this[this.tableSamples.AdsorbConfirmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PatientsRowChangeEvent : global::System.EventArgs {
            
            private PatientsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsRowChangeEvent(PatientsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PatientsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SamplesRowChangeEvent : global::System.EventArgs {
            
            private SamplesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesRowChangeEvent(SamplesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SamplesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SampleTracking.Reports.IgtReports.DataTemplates.ClearMiniTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PatientsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PatientsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Patients";
            tableMapping.ColumnMappings.Add("PatID", "PatID");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("MidInit", "MidInit");
            tableMapping.ColumnMappings.Add("ABO", "ABO");
            tableMapping.ColumnMappings.Add("Relation", "Relation");
            tableMapping.ColumnMappings.Add("DoctorName", "DoctorName");
            tableMapping.ColumnMappings.Add("HospitalID", "HospitalID");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("WP", "WP");
            tableMapping.ColumnMappings.Add("UNOSActive", "UNOSActive");
            tableMapping.ColumnMappings.Add("Organ", "Organ");
            tableMapping.ColumnMappings.Add("Kidney", "Kidney");
            tableMapping.ColumnMappings.Add("Pancreas", "Pancreas");
            tableMapping.ColumnMappings.Add("BirthDate", "BirthDate");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("Race", "Race");
            tableMapping.ColumnMappings.Add("Disease", "Disease");
            tableMapping.ColumnMappings.Add("LambdaName", "LambdaName");
            tableMapping.ColumnMappings.Add("ABOIncompatible", "ABOIncompatible");
            tableMapping.ColumnMappings.Add("ModifiedBy", "ModifiedBy");
            tableMapping.ColumnMappings.Add("ModifyDate", "ModifyDate");
            tableMapping.ColumnMappings.Add("PriorTransplants", "PriorTransplants");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("Pregnancy", "Pregnancy");
            tableMapping.ColumnMappings.Add("Transfusion", "Transfusion");
            tableMapping.ColumnMappings.Add("SmallIntestine", "SmallIntestine");
            tableMapping.ColumnMappings.Add("Liver", "Liver");
            tableMapping.ColumnMappings.Add("BoneMarrow", "BoneMarrow");
            tableMapping.ColumnMappings.Add("Lung", "Lung");
            tableMapping.ColumnMappings.Add("Heart", "Heart");
            tableMapping.ColumnMappings.Add("AddOrgan1", "AddOrgan1");
            tableMapping.ColumnMappings.Add("AddOrgan2", "AddOrgan2");
            tableMapping.ColumnMappings.Add("HIV", "HIV");
            tableMapping.ColumnMappings.Add("UNOSNumber", "UNOSNumber");
            tableMapping.ColumnMappings.Add("Misc", "Misc");
            tableMapping.ColumnMappings.Add("QC", "QC");
            tableMapping.ColumnMappings.Add("Islet", "Islet");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("HospitalPatID", "HospitalPatID");
            tableMapping.ColumnMappings.Add("MNRID", "MNRID");
            tableMapping.ColumnMappings.Add("Altruistic", "Altruistic");
            tableMapping.ColumnMappings.Add("Sensitized", "Sensitized");
            tableMapping.ColumnMappings.Add("Donor_SSAN", "Donor_SSAN");
            tableMapping.ColumnMappings.Add("Auto_AB", "Auto_AB");
            tableMapping.ColumnMappings.Add("Auto_AB_Text", "Auto_AB_Text");
            tableMapping.ColumnMappings.Add("Adsorb", "Adsorb");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Alias", "Alias");
            tableMapping.ColumnMappings.Add("PatCode", "PatCode");
            tableMapping.ColumnMappings.Add("NKRPat", "NKRPat");
            tableMapping.ColumnMappings.Add("NKRCode", "NKRCode");
            tableMapping.ColumnMappings.Add("ListingDate", "ListingDate");
            tableMapping.ColumnMappings.Add("Hep_C", "Hep_C");
            tableMapping.ColumnMappings.Add("A1_Subtype", "A1_Subtype");
            tableMapping.ColumnMappings.Add("RBC_Ab", "RBC_Ab");
            tableMapping.ColumnMappings.Add("EDTA", "EDTA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `Patients` WHERE ((`PatID` = ?))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `Patients` (`PatID`, `LastName`, `FirstName`, `MidInit`, `ABO`, `Relation`, `DoctorName`, `HospitalID`, `Status`, `WP`, `UNOSActive`, `Organ`, `Kidney`, `Pancreas`, `BirthDate`, `Sex`, `Race`, `Disease`, `LambdaName`, `ABOIncompatible`, `ModifiedBy`, `ModifyDate`, `PriorTransplants`, `Comments`, `Pregnancy`, `Transfusion`, `SmallIntestine`, `Liver`, `BoneMarrow`, `Lung`, `Heart`, `AddOrgan1`, `AddOrgan2`, `HIV`, `UNOSNumber`, `Misc`, `QC`, `Islet`, `Age`, `HospitalPatID`, `MNRID`, `Altruistic`, `Sensitized`, `Donor_SSAN`, `Auto_AB`, `Auto_AB_Text`, `Adsorb`, `Address1`, `Address2`, `City`, `State`, `Zip`, `Country`, `Alias`, `PatCode`, `NKRPat`, `NKRCode`, `ListingDate`, `Hep_C`, `A1_Subtype`, `RBC_Ab`, `EDTA`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MidInit", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MidInit", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Relation", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Relation", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DoctorName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DoctorName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HospitalID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HospitalID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WP", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UNOSActive", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UNOSActive", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Organ", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Organ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Kidney", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Kidney", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Pancreas", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Pancreas", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BirthDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Sex", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Race", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Race", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Disease", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Disease", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LambdaName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LambdaName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABOIncompatible", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABOIncompatible", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedBy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifyDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifyDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PriorTransplants", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriorTransplants", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Pregnancy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Pregnancy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Transfusion", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Transfusion", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SmallIntestine", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SmallIntestine", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Liver", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Liver", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BoneMarrow", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoneMarrow", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Lung", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lung", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Heart", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heart", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HIV", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UNOSNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UNOSNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Misc", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Misc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Islet", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Islet", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Age", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Age", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HospitalPatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HospitalPatID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MNRID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MNRID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Altruistic", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Altruistic", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Sensitized", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sensitized", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Donor_SSAN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Donor_SSAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Auto_AB", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Auto_AB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Auto_AB_Text", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Auto_AB_Text", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Adsorb", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adsorb", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Address1", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Address2", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("City", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("State", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Zip", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Zip", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Country", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Alias", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Alias", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NKRPat", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NKRPat", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NKRCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NKRCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ListingDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ListingDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Hep_C", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Hep_C", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("A1_Subtype", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "A1_Subtype", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RBC_Ab", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RBC_Ab", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EDTA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EDTA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Patients` SET `PatID` = ?, `LastName` = ?, `FirstName` = ?, `MidInit` = ?, `ABO` = ?, `Relation` = ?, `DoctorName` = ?, `HospitalID` = ?, `Status` = ?, `WP` = ?, `UNOSActive` = ?, `Organ` = ?, `Kidney` = ?, `Pancreas` = ?, `BirthDate` = ?, `Sex` = ?, `Race` = ?, `Disease` = ?, `LambdaName` = ?, `ABOIncompatible` = ?, `ModifiedBy` = ?, `ModifyDate` = ?, `PriorTransplants` = ?, `Comments` = ?, `Pregnancy` = ?, `Transfusion` = ?, `SmallIntestine` = ?, `Liver` = ?, `BoneMarrow` = ?, `Lung` = ?, `Heart` = ?, `AddOrgan1` = ?, `AddOrgan2` = ?, `HIV` = ?, `UNOSNumber` = ?, `Misc` = ?, `QC` = ?, `Islet` = ?, `Age` = ?, `HospitalPatID` = ?, `MNRID` = ?, `Altruistic` = ?, `Sensitized` = ?, `Donor_SSAN` = ?, `Auto_AB` = ?, `Auto_AB_Text` = ?, `Adsorb` = ?, `Address1` = ?, `Address2` = ?, `City` = ?, `State` = ?, `Zip` = ?, `Country` = ?, `Alias` = ?, `PatCode` = ?, `NKRPat` = ?, `NKRCode` = ?, `ListingDate` = ?, `Hep_C` = ?, `A1_Subtype` = ?, `RBC_Ab` = ?, `EDTA` = ? WHERE ((`PatID` = ?))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MidInit", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MidInit", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Relation", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Relation", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DoctorName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DoctorName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HospitalID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HospitalID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WP", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UNOSActive", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UNOSActive", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Organ", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Organ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Kidney", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Kidney", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Pancreas", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Pancreas", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BirthDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Sex", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Race", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Race", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Disease", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Disease", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LambdaName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LambdaName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABOIncompatible", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABOIncompatible", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedBy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifyDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifyDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PriorTransplants", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriorTransplants", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Pregnancy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Pregnancy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Transfusion", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Transfusion", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SmallIntestine", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SmallIntestine", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Liver", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Liver", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BoneMarrow", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoneMarrow", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Lung", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lung", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Heart", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heart", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HIV", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UNOSNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UNOSNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Misc", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Misc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Islet", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Islet", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Age", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Age", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HospitalPatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HospitalPatID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MNRID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MNRID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Altruistic", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Altruistic", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Sensitized", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sensitized", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Donor_SSAN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Donor_SSAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Auto_AB", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Auto_AB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Auto_AB_Text", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Auto_AB_Text", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Adsorb", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adsorb", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Address1", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Address2", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("City", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("State", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Zip", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Zip", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Country", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Alias", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Alias", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NKRPat", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NKRPat", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NKRCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NKRCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ListingDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ListingDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Hep_C", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Hep_C", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("A1_Subtype", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "A1_Subtype", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RBC_Ab", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RBC_Ab", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EDTA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EDTA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["igtConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[2];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PatID, LastName, FirstName, MidInit, ABO, Relation, DoctorName, HospitalID, Status, WP, UNOSActive, Organ, Kidney, Pancreas, BirthDate, Sex, Race, Disease, LambdaName, ABOIncompatible, ModifiedBy, ModifyDate, PriorTransplants, Comments, Pregnancy, Transfusion, SmallIntestine, Liver, BoneMarrow, Lung, Heart, AddOrgan1, AddOrgan2, HIV, UNOSNumber, Misc, QC, Islet, Age, HospitalPatID, MNRID, Altruistic, Sensitized, Donor_SSAN, Auto_AB, Auto_AB_Text, Adsorb, Address1, Address2, City, State, Zip, Country, Alias, PatCode, NKRPat, NKRCode, ListingDate, Hep_C, A1_Subtype, RBC_Ab, EDTA FROM Patients";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Patients.ABO, Samples.LogNumber, Samples.SampleDate, Patients.HospitalID, Patients.LastName, Patients.FirstName, Samples.ABS, Samples.PatID
FROM            (Samples Samples LEFT OUTER JOIN
                         Patients Patients ON Samples.PatID = Patients.PatID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClearMini.PatientsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClearMini.PatientsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClearMini.PatientsDataTable dataTable = new ClearMini.PatientsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClearMini.PatientsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClearMini dataSet) {
            return this.Adapter.Update(dataSet, "Patients");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PatID) {
            if ((Original_PatID == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PatID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string PatID, 
                    string LastName, 
                    string FirstName, 
                    string MidInit, 
                    string ABO, 
                    string Relation, 
                    string DoctorName, 
                    string HospitalID, 
                    string Status, 
                    bool WP, 
                    bool UNOSActive, 
                    string Organ, 
                    bool Kidney, 
                    bool Pancreas, 
                    global::System.Nullable<global::System.DateTime> BirthDate, 
                    string Sex, 
                    string Race, 
                    string Disease, 
                    string LambdaName, 
                    bool ABOIncompatible, 
                    string ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifyDate, 
                    string PriorTransplants, 
                    string Comments, 
                    string Pregnancy, 
                    string Transfusion, 
                    bool SmallIntestine, 
                    bool Liver, 
                    bool BoneMarrow, 
                    bool Lung, 
                    bool Heart, 
                    bool AddOrgan1, 
                    bool AddOrgan2, 
                    string HIV, 
                    string UNOSNumber, 
                    bool Misc, 
                    bool QC, 
                    bool Islet, 
                    string Age, 
                    string HospitalPatID, 
                    string MNRID, 
                    bool Altruistic, 
                    bool Sensitized, 
                    string Donor_SSAN, 
                    bool Auto_AB, 
                    string Auto_AB_Text, 
                    bool Adsorb, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Country, 
                    string Alias, 
                    string PatCode, 
                    bool NKRPat, 
                    string NKRCode, 
                    global::System.Nullable<global::System.DateTime> ListingDate, 
                    bool Hep_C, 
                    string A1_Subtype, 
                    string RBC_Ab, 
                    bool EDTA) {
            if ((PatID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PatID));
            }
            if ((LastName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LastName));
            }
            if ((FirstName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FirstName));
            }
            if ((MidInit == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MidInit));
            }
            if ((ABO == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ABO));
            }
            if ((Relation == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Relation));
            }
            if ((DoctorName == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DoctorName));
            }
            if ((HospitalID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(HospitalID));
            }
            if ((Status == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Status));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(WP));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(UNOSActive));
            if ((Organ == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Organ));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Kidney));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(Pancreas));
            if ((BirthDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(BirthDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Sex == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Sex));
            }
            if ((Race == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Race));
            }
            if ((Disease == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Disease));
            }
            if ((LambdaName == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(LambdaName));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(ABOIncompatible));
            if ((ModifiedBy == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ModifiedBy));
            }
            if ((ModifyDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(ModifyDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((PriorTransplants == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PriorTransplants));
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Comments));
            }
            if ((Pregnancy == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Pregnancy));
            }
            if ((Transfusion == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Transfusion));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(SmallIntestine));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(Liver));
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(BoneMarrow));
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(Lung));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(Heart));
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(AddOrgan1));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(AddOrgan2));
            if ((HIV == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(HIV));
            }
            if ((UNOSNumber == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(UNOSNumber));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(Misc));
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(QC));
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(Islet));
            if ((Age == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Age));
            }
            if ((HospitalPatID == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(HospitalPatID));
            }
            if ((MNRID == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(MNRID));
            }
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(Altruistic));
            this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(Sensitized));
            if ((Donor_SSAN == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(Donor_SSAN));
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(Auto_AB));
            if ((Auto_AB_Text == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(Auto_AB_Text));
            }
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(Adsorb));
            if ((Address1 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Address2));
            }
            if ((City == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(City));
            }
            if ((State == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(State));
            }
            if ((Zip == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(Zip));
            }
            if ((Country == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(Country));
            }
            if ((Alias == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(Alias));
            }
            if ((PatCode == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(PatCode));
            }
            this.Adapter.InsertCommand.Parameters[55].Value = ((bool)(NKRPat));
            if ((NKRCode == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(NKRCode));
            }
            if ((ListingDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((System.DateTime)(ListingDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(Hep_C));
            if ((A1_Subtype == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(A1_Subtype));
            }
            if ((RBC_Ab == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(RBC_Ab));
            }
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(EDTA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PatID, 
                    string LastName, 
                    string FirstName, 
                    string MidInit, 
                    string ABO, 
                    string Relation, 
                    string DoctorName, 
                    string HospitalID, 
                    string Status, 
                    bool WP, 
                    bool UNOSActive, 
                    string Organ, 
                    bool Kidney, 
                    bool Pancreas, 
                    global::System.Nullable<global::System.DateTime> BirthDate, 
                    string Sex, 
                    string Race, 
                    string Disease, 
                    string LambdaName, 
                    bool ABOIncompatible, 
                    string ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifyDate, 
                    string PriorTransplants, 
                    string Comments, 
                    string Pregnancy, 
                    string Transfusion, 
                    bool SmallIntestine, 
                    bool Liver, 
                    bool BoneMarrow, 
                    bool Lung, 
                    bool Heart, 
                    bool AddOrgan1, 
                    bool AddOrgan2, 
                    string HIV, 
                    string UNOSNumber, 
                    bool Misc, 
                    bool QC, 
                    bool Islet, 
                    string Age, 
                    string HospitalPatID, 
                    string MNRID, 
                    bool Altruistic, 
                    bool Sensitized, 
                    string Donor_SSAN, 
                    bool Auto_AB, 
                    string Auto_AB_Text, 
                    bool Adsorb, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Country, 
                    string Alias, 
                    string PatCode, 
                    bool NKRPat, 
                    string NKRCode, 
                    global::System.Nullable<global::System.DateTime> ListingDate, 
                    bool Hep_C, 
                    string A1_Subtype, 
                    string RBC_Ab, 
                    bool EDTA, 
                    string Original_PatID) {
            if ((PatID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PatID));
            }
            if ((LastName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LastName));
            }
            if ((FirstName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FirstName));
            }
            if ((MidInit == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MidInit));
            }
            if ((ABO == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ABO));
            }
            if ((Relation == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Relation));
            }
            if ((DoctorName == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DoctorName));
            }
            if ((HospitalID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(HospitalID));
            }
            if ((Status == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Status));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(WP));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(UNOSActive));
            if ((Organ == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Organ));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Kidney));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Pancreas));
            if ((BirthDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(BirthDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Sex == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Sex));
            }
            if ((Race == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Race));
            }
            if ((Disease == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Disease));
            }
            if ((LambdaName == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(LambdaName));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(ABOIncompatible));
            if ((ModifiedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ModifiedBy));
            }
            if ((ModifyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(ModifyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((PriorTransplants == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(PriorTransplants));
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Comments));
            }
            if ((Pregnancy == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Pregnancy));
            }
            if ((Transfusion == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Transfusion));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(SmallIntestine));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(Liver));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(BoneMarrow));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Lung));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Heart));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(AddOrgan1));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(AddOrgan2));
            if ((HIV == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(HIV));
            }
            if ((UNOSNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(UNOSNumber));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Misc));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(QC));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Islet));
            if ((Age == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Age));
            }
            if ((HospitalPatID == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(HospitalPatID));
            }
            if ((MNRID == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(MNRID));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Altruistic));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(Sensitized));
            if ((Donor_SSAN == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Donor_SSAN));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Auto_AB));
            if ((Auto_AB_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Auto_AB_Text));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(Adsorb));
            if ((Address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Address2));
            }
            if ((City == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(City));
            }
            if ((State == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(State));
            }
            if ((Zip == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Zip));
            }
            if ((Country == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Country));
            }
            if ((Alias == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Alias));
            }
            if ((PatCode == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(PatCode));
            }
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(NKRPat));
            if ((NKRCode == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(NKRCode));
            }
            if ((ListingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(ListingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Hep_C));
            if ((A1_Subtype == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(A1_Subtype));
            }
            if ((RBC_Ab == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(RBC_Ab));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(EDTA));
            if ((Original_PatID == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_PatID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LastName, 
                    string FirstName, 
                    string MidInit, 
                    string ABO, 
                    string Relation, 
                    string DoctorName, 
                    string HospitalID, 
                    string Status, 
                    bool WP, 
                    bool UNOSActive, 
                    string Organ, 
                    bool Kidney, 
                    bool Pancreas, 
                    global::System.Nullable<global::System.DateTime> BirthDate, 
                    string Sex, 
                    string Race, 
                    string Disease, 
                    string LambdaName, 
                    bool ABOIncompatible, 
                    string ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifyDate, 
                    string PriorTransplants, 
                    string Comments, 
                    string Pregnancy, 
                    string Transfusion, 
                    bool SmallIntestine, 
                    bool Liver, 
                    bool BoneMarrow, 
                    bool Lung, 
                    bool Heart, 
                    bool AddOrgan1, 
                    bool AddOrgan2, 
                    string HIV, 
                    string UNOSNumber, 
                    bool Misc, 
                    bool QC, 
                    bool Islet, 
                    string Age, 
                    string HospitalPatID, 
                    string MNRID, 
                    bool Altruistic, 
                    bool Sensitized, 
                    string Donor_SSAN, 
                    bool Auto_AB, 
                    string Auto_AB_Text, 
                    bool Adsorb, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Country, 
                    string Alias, 
                    string PatCode, 
                    bool NKRPat, 
                    string NKRCode, 
                    global::System.Nullable<global::System.DateTime> ListingDate, 
                    bool Hep_C, 
                    string A1_Subtype, 
                    string RBC_Ab, 
                    bool EDTA, 
                    string Original_PatID) {
            return this.Update(Original_PatID, LastName, FirstName, MidInit, ABO, Relation, DoctorName, HospitalID, Status, WP, UNOSActive, Organ, Kidney, Pancreas, BirthDate, Sex, Race, Disease, LambdaName, ABOIncompatible, ModifiedBy, ModifyDate, PriorTransplants, Comments, Pregnancy, Transfusion, SmallIntestine, Liver, BoneMarrow, Lung, Heart, AddOrgan1, AddOrgan2, HIV, UNOSNumber, Misc, QC, Islet, Age, HospitalPatID, MNRID, Altruistic, Sensitized, Donor_SSAN, Auto_AB, Auto_AB_Text, Adsorb, Address1, Address2, City, State, Zip, Country, Alias, PatCode, NKRPat, NKRCode, ListingDate, Hep_C, A1_Subtype, RBC_Ab, EDTA, Original_PatID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQuery() {
            global::System.Data.OleDb.OleDbCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SamplesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SamplesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Samples";
            tableMapping.ColumnMappings.Add("LogNumber", "LogNumber");
            tableMapping.ColumnMappings.Add("LogDateTime", "LogDateTime");
            tableMapping.ColumnMappings.Add("PatID", "PatID");
            tableMapping.ColumnMappings.Add("SampleDate", "SampleDate");
            tableMapping.ColumnMappings.Add("B", "B");
            tableMapping.ColumnMappings.Add("S", "S");
            tableMapping.ColumnMappings.Add("LN", "LN");
            tableMapping.ColumnMappings.Add("SP", "SP");
            tableMapping.ColumnMappings.Add("Cells", "Cells");
            tableMapping.ColumnMappings.Add("HLA_ABC", "HLA_ABC");
            tableMapping.ColumnMappings.Add("HLA_DR", "HLA_DR");
            tableMapping.ColumnMappings.Add("ABS", "ABS");
            tableMapping.ColumnMappings.Add("NS", "NS");
            tableMapping.ColumnMappings.Add("NSNC", "NSNC");
            tableMapping.ColumnMappings.Add("XM_Auto", "XM_Auto");
            tableMapping.ColumnMappings.Add("XM_Donor", "XM_Donor");
            tableMapping.ColumnMappings.Add("XM_Final", "XM_Final");
            tableMapping.ColumnMappings.Add("Freeze", "Freeze");
            tableMapping.ColumnMappings.Add("MLC", "MLC");
            tableMapping.ColumnMappings.Add("Hemolyze", "Hemolyze");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("Finalized", "Finalized");
            tableMapping.ColumnMappings.Add("MIQS", "MIQS");
            tableMapping.ColumnMappings.Add("MIQS_ID", "MIQS_ID");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("ModifiedBy", "ModifiedBy");
            tableMapping.ColumnMappings.Add("ModifyDate", "ModifyDate");
            tableMapping.ColumnMappings.Add("Available", "Available");
            tableMapping.ColumnMappings.Add("Kidney", "Kidney");
            tableMapping.ColumnMappings.Add("Pancreas", "Pancreas");
            tableMapping.ColumnMappings.Add("SmallIntestine", "SmallIntestine");
            tableMapping.ColumnMappings.Add("Liver", "Liver");
            tableMapping.ColumnMappings.Add("BoneMarrow", "BoneMarrow");
            tableMapping.ColumnMappings.Add("Lung", "Lung");
            tableMapping.ColumnMappings.Add("Heart", "Heart");
            tableMapping.ColumnMappings.Add("AddOrgan1", "AddOrgan1");
            tableMapping.ColumnMappings.Add("AddOrgan2", "AddOrgan2");
            tableMapping.ColumnMappings.Add("XM_Flow", "XM_Flow");
            tableMapping.ColumnMappings.Add("Misc", "Misc");
            tableMapping.ColumnMappings.Add("QC", "QC");
            tableMapping.ColumnMappings.Add("ABOTest", "ABOTest");
            tableMapping.ColumnMappings.Add("Islet", "Islet");
            tableMapping.ColumnMappings.Add("PostTransplant", "PostTransplant");
            tableMapping.ColumnMappings.Add("ABC_CDC", "ABC_CDC");
            tableMapping.ColumnMappings.Add("DR_CDC", "DR_CDC");
            tableMapping.ColumnMappings.Add("ABC_DNA", "ABC_DNA");
            tableMapping.ColumnMappings.Add("DR_DNA", "DR_DNA");
            tableMapping.ColumnMappings.Add("Luminex", "Luminex");
            tableMapping.ColumnMappings.Add("Fast_Screen", "Fast_Screen");
            tableMapping.ColumnMappings.Add("XM_CDC", "XM_CDC");
            tableMapping.ColumnMappings.Add("Standard", "Standard");
            tableMapping.ColumnMappings.Add("RackNumber", "RackNumber");
            tableMapping.ColumnMappings.Add("PRA_CL1", "PRA_CL1");
            tableMapping.ColumnMappings.Add("PRA_CL2", "PRA_CL2");
            tableMapping.ColumnMappings.Add("SA_CL1", "SA_CL1");
            tableMapping.ColumnMappings.Add("SA_CL2", "SA_CL2");
            tableMapping.ColumnMappings.Add("MixedBead", "MixedBead");
            tableMapping.ColumnMappings.Add("QC_Comments", "QC_Comments");
            tableMapping.ColumnMappings.Add("NoQCIssues", "NoQCIssues");
            tableMapping.ColumnMappings.Add("CreateBy", "CreateBy");
            tableMapping.ColumnMappings.Add("Auto_Luminex_Comments", "Auto_Luminex_Comments");
            tableMapping.ColumnMappings.Add("Special_Handling", "Special_Handling");
            tableMapping.ColumnMappings.Add("Stat_ABC_DR", "Stat_ABC_DR");
            tableMapping.ColumnMappings.Add("Stat_SA_CL1", "Stat_SA_CL1");
            tableMapping.ColumnMappings.Add("Stat_SA_CL2", "Stat_SA_CL2");
            tableMapping.ColumnMappings.Add("Suppress_Luminex", "Suppress_Luminex");
            tableMapping.ColumnMappings.Add("Mod_CL1", "Mod_CL1");
            tableMapping.ColumnMappings.Add("Mod_CL2", "Mod_CL2");
            tableMapping.ColumnMappings.Add("Stat_Mod_CL1", "Stat_Mod_CL1");
            tableMapping.ColumnMappings.Add("Stat_Mod_CL2", "Stat_Mod_CL2");
            tableMapping.ColumnMappings.Add("Adsorb", "Adsorb");
            tableMapping.ColumnMappings.Add("EDTA", "EDTA");
            tableMapping.ColumnMappings.Add("Filter", "Filter");
            tableMapping.ColumnMappings.Add("Dilution", "Dilution");
            tableMapping.ColumnMappings.Add("Other", "Other");
            tableMapping.ColumnMappings.Add("Stat_ABC_Only", "Stat_ABC_Only");
            tableMapping.ColumnMappings.Add("ABO_A1_Subtype_Test", "ABO_A1_Subtype_Test");
            tableMapping.ColumnMappings.Add("Expedited_Test", "Expedited_Test");
            tableMapping.ColumnMappings.Add("AccessionNumber", "AccessionNumber");
            tableMapping.ColumnMappings.Add("EDTAConfirm", "EDTAConfirm");
            tableMapping.ColumnMappings.Add("AdsorbConfirm", "AdsorbConfirm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `Samples` WHERE ((`LogNumber` = ?))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LogNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LogNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `Samples` (`LogNumber`, `LogDateTime`, `PatID`, `SampleDate`, `B`, `S`, `LN`, `SP`, `Cells`, `HLA_ABC`, `HLA_DR`, `ABS`, `NS`, `NSNC`, `XM_Auto`, `XM_Donor`, `XM_Final`, `Freeze`, `MLC`, `Hemolyze`, `Comments`, `Finalized`, `MIQS`, `MIQS_ID`, `Status`, `ModifiedBy`, `ModifyDate`, `Available`, `Kidney`, `Pancreas`, `SmallIntestine`, `Liver`, `BoneMarrow`, `Lung`, `Heart`, `AddOrgan1`, `AddOrgan2`, `XM_Flow`, `Misc`, `QC`, `ABOTest`, `Islet`, `PostTransplant`, `ABC_CDC`, `DR_CDC`, `ABC_DNA`, `DR_DNA`, `Luminex`, `Fast_Screen`, `XM_CDC`, `Standard`, `RackNumber`, `PRA_CL1`, `PRA_CL2`, `SA_CL1`, `SA_CL2`, `MixedBead`, `QC_Comments`, `NoQCIssues`, `CreateBy`, `Auto_Luminex_Comments`, `Special_Handling`, `Stat_ABC_DR`, `Stat_SA_CL1`, `Stat_SA_CL2`, `Suppress_Luminex`, `Mod_CL1`, `Mod_CL2`, `Stat_Mod_CL1`, `Stat_Mod_CL2`, `Adsorb`, `EDTA`, `Filter`, `Dilution`, `Other`, `Stat_ABC_Only`, `ABO_A1_Subtype_Test`, `Expedited_Test`, `AccessionNumber`, `EDTAConfirm`, `AdsorbConfirm`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LogNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LogNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LogDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LogDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SampleDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SampleDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("B", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "B", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("S", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LN", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SP", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Cells", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Cells", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HLA_ABC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HLA_ABC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HLA_DR", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HLA_DR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABS", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NS", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSNC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSNC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Auto", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Auto", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Donor", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Donor", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Final", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Final", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Freeze", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Freeze", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MLC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MLC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Hemolyze", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Hemolyze", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Finalized", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Finalized", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MIQS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MIQS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MIQS_ID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MIQS_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedBy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifyDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifyDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Available", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Available", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Kidney", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Kidney", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Pancreas", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Pancreas", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SmallIntestine", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SmallIntestine", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Liver", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Liver", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BoneMarrow", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoneMarrow", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Lung", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lung", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Heart", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heart", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Flow", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Flow", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Misc", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Misc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABOTest", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABOTest", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Islet", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Islet", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PostTransplant", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostTransplant", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABC_CDC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABC_CDC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DR_CDC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DR_CDC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABC_DNA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABC_DNA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DR_DNA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DR_DNA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Luminex", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Luminex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Fast_Screen", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fast_Screen", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_CDC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_CDC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Standard", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Standard", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RackNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RackNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PRA_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRA_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PRA_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRA_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SA_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SA_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SA_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SA_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MixedBead", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MixedBead", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QC_Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QC_Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NoQCIssues", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoQCIssues", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreateBy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreateBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Auto_Luminex_Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Auto_Luminex_Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Special_Handling", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special_Handling", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_ABC_DR", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_ABC_DR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_SA_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_SA_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_SA_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_SA_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Suppress_Luminex", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Suppress_Luminex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Mod_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mod_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Mod_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mod_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_Mod_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_Mod_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_Mod_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_Mod_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Adsorb", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adsorb", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EDTA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EDTA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Filter", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Filter", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Dilution", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Dilution", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Other", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Other", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_ABC_Only", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_ABC_Only", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABO_A1_Subtype_Test", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABO_A1_Subtype_Test", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Expedited_Test", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expedited_Test", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AccessionNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccessionNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EDTAConfirm", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EDTAConfirm", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AdsorbConfirm", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AdsorbConfirm", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Samples` SET `LogNumber` = ?, `LogDateTime` = ?, `PatID` = ?, `SampleDate` = ?, `B` = ?, `S` = ?, `LN` = ?, `SP` = ?, `Cells` = ?, `HLA_ABC` = ?, `HLA_DR` = ?, `ABS` = ?, `NS` = ?, `NSNC` = ?, `XM_Auto` = ?, `XM_Donor` = ?, `XM_Final` = ?, `Freeze` = ?, `MLC` = ?, `Hemolyze` = ?, `Comments` = ?, `Finalized` = ?, `MIQS` = ?, `MIQS_ID` = ?, `Status` = ?, `ModifiedBy` = ?, `ModifyDate` = ?, `Available` = ?, `Kidney` = ?, `Pancreas` = ?, `SmallIntestine` = ?, `Liver` = ?, `BoneMarrow` = ?, `Lung` = ?, `Heart` = ?, `AddOrgan1` = ?, `AddOrgan2` = ?, `XM_Flow` = ?, `Misc` = ?, `QC` = ?, `ABOTest` = ?, `Islet` = ?, `PostTransplant` = ?, `ABC_CDC` = ?, `DR_CDC` = ?, `ABC_DNA` = ?, `DR_DNA` = ?, `Luminex` = ?, `Fast_Screen` = ?, `XM_CDC` = ?, `Standard` = ?, `RackNumber` = ?, `PRA_CL1` = ?, `PRA_CL2` = ?, `SA_CL1` = ?, `SA_CL2` = ?, `MixedBead` = ?, `QC_Comments` = ?, `NoQCIssues` = ?, `CreateBy` = ?, `Auto_Luminex_Comments` = ?, `Special_Handling` = ?, `Stat_ABC_DR` = ?, `Stat_SA_CL1` = ?, `Stat_SA_CL2` = ?, `Suppress_Luminex` = ?, `Mod_CL1` = ?, `Mod_CL2` = ?, `Stat_Mod_CL1` = ?, `Stat_Mod_CL2` = ?, `Adsorb` = ?, `EDTA` = ?, `Filter` = ?, `Dilution` = ?, `Other` = ?, `Stat_ABC_Only` = ?, `ABO_A1_Subtype_Test` = ?, `Expedited_Test` = ?, `AccessionNumber` = ?, `EDTAConfirm` = ?, `AdsorbConfirm` = ? WHERE ((`LogNumber` = ?))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LogNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LogNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LogDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LogDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SampleDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SampleDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("B", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "B", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("S", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LN", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SP", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Cells", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Cells", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HLA_ABC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HLA_ABC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HLA_DR", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HLA_DR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABS", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NS", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSNC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSNC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Auto", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Auto", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Donor", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Donor", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Final", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Final", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Freeze", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Freeze", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MLC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MLC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Hemolyze", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Hemolyze", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Finalized", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Finalized", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MIQS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MIQS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MIQS_ID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MIQS_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedBy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifyDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifyDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Available", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Available", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Kidney", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Kidney", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Pancreas", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Pancreas", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SmallIntestine", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SmallIntestine", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Liver", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Liver", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BoneMarrow", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoneMarrow", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Lung", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lung", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Heart", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heart", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AddOrgan2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AddOrgan2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_Flow", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_Flow", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Misc", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Misc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABOTest", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABOTest", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Islet", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Islet", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PostTransplant", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostTransplant", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABC_CDC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABC_CDC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DR_CDC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DR_CDC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABC_DNA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABC_DNA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DR_DNA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DR_DNA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Luminex", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Luminex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Fast_Screen", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fast_Screen", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XM_CDC", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XM_CDC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Standard", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Standard", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RackNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RackNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PRA_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRA_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PRA_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRA_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SA_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SA_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SA_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SA_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MixedBead", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MixedBead", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QC_Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QC_Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NoQCIssues", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoQCIssues", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreateBy", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreateBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Auto_Luminex_Comments", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Auto_Luminex_Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Special_Handling", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special_Handling", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_ABC_DR", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_ABC_DR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_SA_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_SA_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_SA_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_SA_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Suppress_Luminex", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Suppress_Luminex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Mod_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mod_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Mod_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mod_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_Mod_CL1", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_Mod_CL1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_Mod_CL2", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_Mod_CL2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Adsorb", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adsorb", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EDTA", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EDTA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Filter", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Filter", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Dilution", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Dilution", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Other", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Other", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stat_ABC_Only", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stat_ABC_Only", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABO_A1_Subtype_Test", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABO_A1_Subtype_Test", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Expedited_Test", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expedited_Test", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AccessionNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccessionNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EDTAConfirm", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EDTAConfirm", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AdsorbConfirm", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AdsorbConfirm", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LogNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LogNumber", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["igtConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT LogNumber, LogDateTime, PatID, SampleDate, B, S, LN, SP, Cells, HLA_ABC, HLA_DR, ABS, NS, NSNC, XM_Auto, XM_Donor, XM_Final, Freeze, MLC, Hemolyze, Comments, Finalized, MIQS, MIQS_ID, Status, ModifiedBy, ModifyDate, Available, Kidney, Pancreas, SmallIntestine, Liver, BoneMarrow, Lung, Heart, AddOrgan1, AddOrgan2, XM_Flow, Misc, QC, ABOTest, Islet, PostTransplant, ABC_CDC, DR_CDC, ABC_DNA, DR_DNA, Luminex, Fast_Screen, XM_CDC, Standard, RackNumber, PRA_CL1, PRA_CL2, SA_CL1, SA_CL2, MixedBead, QC_Comments, NoQCIssues, CreateBy, Auto_Luminex_Comments, Special_Handling, Stat_ABC_DR, Stat_SA_CL1, Stat_SA_CL2, Suppress_Luminex, Mod_CL1, Mod_CL2, Stat_Mod_CL1, Stat_Mod_CL2, Adsorb, EDTA, Filter, Dilution, Other, Stat_ABC_Only, ABO_A1_Subtype_Test, Expedited_Test, AccessionNumber, EDTAConfirm, AdsorbConfirm FROM Samples";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClearMini.SamplesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClearMini.SamplesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ClearMini.SamplesDataTable dataTable = new ClearMini.SamplesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClearMini.SamplesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClearMini dataSet) {
            return this.Adapter.Update(dataSet, "Samples");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_LogNumber) {
            if ((Original_LogNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LogNumber));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string LogNumber, 
                    global::System.Nullable<global::System.DateTime> LogDateTime, 
                    string PatID, 
                    global::System.Nullable<global::System.DateTime> SampleDate, 
                    bool B, 
                    bool S, 
                    bool LN, 
                    bool SP, 
                    bool Cells, 
                    bool HLA_ABC, 
                    bool HLA_DR, 
                    bool ABS, 
                    bool NS, 
                    bool NSNC, 
                    bool XM_Auto, 
                    bool XM_Donor, 
                    bool XM_Final, 
                    bool Freeze, 
                    bool MLC, 
                    bool Hemolyze, 
                    string Comments, 
                    bool Finalized, 
                    string MIQS, 
                    string MIQS_ID, 
                    string Status, 
                    string ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifyDate, 
                    string Available, 
                    bool Kidney, 
                    bool Pancreas, 
                    bool SmallIntestine, 
                    bool Liver, 
                    bool BoneMarrow, 
                    bool Lung, 
                    bool Heart, 
                    bool AddOrgan1, 
                    bool AddOrgan2, 
                    bool XM_Flow, 
                    bool Misc, 
                    bool QC, 
                    bool ABOTest, 
                    bool Islet, 
                    bool PostTransplant, 
                    bool ABC_CDC, 
                    bool DR_CDC, 
                    bool ABC_DNA, 
                    bool DR_DNA, 
                    bool Luminex, 
                    bool Fast_Screen, 
                    bool XM_CDC, 
                    bool Standard, 
                    string RackNumber, 
                    bool PRA_CL1, 
                    bool PRA_CL2, 
                    bool SA_CL1, 
                    bool SA_CL2, 
                    bool MixedBead, 
                    string QC_Comments, 
                    bool NoQCIssues, 
                    string CreateBy, 
                    string Auto_Luminex_Comments, 
                    bool Special_Handling, 
                    bool Stat_ABC_DR, 
                    bool Stat_SA_CL1, 
                    bool Stat_SA_CL2, 
                    bool Suppress_Luminex, 
                    bool Mod_CL1, 
                    bool Mod_CL2, 
                    bool Stat_Mod_CL1, 
                    bool Stat_Mod_CL2, 
                    bool Adsorb, 
                    bool EDTA, 
                    bool Filter, 
                    bool Dilution, 
                    bool Other, 
                    bool Stat_ABC_Only, 
                    bool ABO_A1_Subtype_Test, 
                    bool Expedited_Test, 
                    string AccessionNumber, 
                    bool EDTAConfirm, 
                    bool AdsorbConfirm) {
            if ((LogNumber == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LogNumber));
            }
            if ((LogDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(LogDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PatID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PatID));
            }
            if ((SampleDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(SampleDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(B));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(S));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(LN));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(SP));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Cells));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(HLA_ABC));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(HLA_DR));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(ABS));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(NS));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(NSNC));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(XM_Auto));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(XM_Donor));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(XM_Final));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(Freeze));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(MLC));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(Hemolyze));
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Comments));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(Finalized));
            if ((MIQS == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(MIQS));
            }
            if ((MIQS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(MIQS_ID));
            }
            if ((Status == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Status));
            }
            if ((ModifiedBy == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ModifiedBy));
            }
            if ((ModifyDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(ModifyDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Available == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Available));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(Kidney));
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(Pancreas));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(SmallIntestine));
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(Liver));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(BoneMarrow));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(Lung));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(Heart));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(AddOrgan1));
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(AddOrgan2));
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(XM_Flow));
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(Misc));
            this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(QC));
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(ABOTest));
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(Islet));
            this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(PostTransplant));
            this.Adapter.InsertCommand.Parameters[43].Value = ((bool)(ABC_CDC));
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(DR_CDC));
            this.Adapter.InsertCommand.Parameters[45].Value = ((bool)(ABC_DNA));
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(DR_DNA));
            this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(Luminex));
            this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(Fast_Screen));
            this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(XM_CDC));
            this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(Standard));
            if ((RackNumber == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(RackNumber));
            }
            this.Adapter.InsertCommand.Parameters[52].Value = ((bool)(PRA_CL1));
            this.Adapter.InsertCommand.Parameters[53].Value = ((bool)(PRA_CL2));
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(SA_CL1));
            this.Adapter.InsertCommand.Parameters[55].Value = ((bool)(SA_CL2));
            this.Adapter.InsertCommand.Parameters[56].Value = ((bool)(MixedBead));
            if ((QC_Comments == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(QC_Comments));
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(NoQCIssues));
            if ((CreateBy == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(CreateBy));
            }
            if ((Auto_Luminex_Comments == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(Auto_Luminex_Comments));
            }
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(Special_Handling));
            this.Adapter.InsertCommand.Parameters[62].Value = ((bool)(Stat_ABC_DR));
            this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(Stat_SA_CL1));
            this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(Stat_SA_CL2));
            this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(Suppress_Luminex));
            this.Adapter.InsertCommand.Parameters[66].Value = ((bool)(Mod_CL1));
            this.Adapter.InsertCommand.Parameters[67].Value = ((bool)(Mod_CL2));
            this.Adapter.InsertCommand.Parameters[68].Value = ((bool)(Stat_Mod_CL1));
            this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(Stat_Mod_CL2));
            this.Adapter.InsertCommand.Parameters[70].Value = ((bool)(Adsorb));
            this.Adapter.InsertCommand.Parameters[71].Value = ((bool)(EDTA));
            this.Adapter.InsertCommand.Parameters[72].Value = ((bool)(Filter));
            this.Adapter.InsertCommand.Parameters[73].Value = ((bool)(Dilution));
            this.Adapter.InsertCommand.Parameters[74].Value = ((bool)(Other));
            this.Adapter.InsertCommand.Parameters[75].Value = ((bool)(Stat_ABC_Only));
            this.Adapter.InsertCommand.Parameters[76].Value = ((bool)(ABO_A1_Subtype_Test));
            this.Adapter.InsertCommand.Parameters[77].Value = ((bool)(Expedited_Test));
            if ((AccessionNumber == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(AccessionNumber));
            }
            this.Adapter.InsertCommand.Parameters[79].Value = ((bool)(EDTAConfirm));
            this.Adapter.InsertCommand.Parameters[80].Value = ((bool)(AdsorbConfirm));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LogNumber, 
                    global::System.Nullable<global::System.DateTime> LogDateTime, 
                    string PatID, 
                    global::System.Nullable<global::System.DateTime> SampleDate, 
                    bool B, 
                    bool S, 
                    bool LN, 
                    bool SP, 
                    bool Cells, 
                    bool HLA_ABC, 
                    bool HLA_DR, 
                    bool ABS, 
                    bool NS, 
                    bool NSNC, 
                    bool XM_Auto, 
                    bool XM_Donor, 
                    bool XM_Final, 
                    bool Freeze, 
                    bool MLC, 
                    bool Hemolyze, 
                    string Comments, 
                    bool Finalized, 
                    string MIQS, 
                    string MIQS_ID, 
                    string Status, 
                    string ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifyDate, 
                    string Available, 
                    bool Kidney, 
                    bool Pancreas, 
                    bool SmallIntestine, 
                    bool Liver, 
                    bool BoneMarrow, 
                    bool Lung, 
                    bool Heart, 
                    bool AddOrgan1, 
                    bool AddOrgan2, 
                    bool XM_Flow, 
                    bool Misc, 
                    bool QC, 
                    bool ABOTest, 
                    bool Islet, 
                    bool PostTransplant, 
                    bool ABC_CDC, 
                    bool DR_CDC, 
                    bool ABC_DNA, 
                    bool DR_DNA, 
                    bool Luminex, 
                    bool Fast_Screen, 
                    bool XM_CDC, 
                    bool Standard, 
                    string RackNumber, 
                    bool PRA_CL1, 
                    bool PRA_CL2, 
                    bool SA_CL1, 
                    bool SA_CL2, 
                    bool MixedBead, 
                    string QC_Comments, 
                    bool NoQCIssues, 
                    string CreateBy, 
                    string Auto_Luminex_Comments, 
                    bool Special_Handling, 
                    bool Stat_ABC_DR, 
                    bool Stat_SA_CL1, 
                    bool Stat_SA_CL2, 
                    bool Suppress_Luminex, 
                    bool Mod_CL1, 
                    bool Mod_CL2, 
                    bool Stat_Mod_CL1, 
                    bool Stat_Mod_CL2, 
                    bool Adsorb, 
                    bool EDTA, 
                    bool Filter, 
                    bool Dilution, 
                    bool Other, 
                    bool Stat_ABC_Only, 
                    bool ABO_A1_Subtype_Test, 
                    bool Expedited_Test, 
                    string AccessionNumber, 
                    bool EDTAConfirm, 
                    bool AdsorbConfirm, 
                    string Original_LogNumber) {
            if ((LogNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LogNumber));
            }
            if ((LogDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(LogDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PatID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PatID));
            }
            if ((SampleDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(SampleDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(B));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(S));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(LN));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(SP));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Cells));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(HLA_ABC));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(HLA_DR));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(ABS));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(NS));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(NSNC));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(XM_Auto));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(XM_Donor));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(XM_Final));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Freeze));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(MLC));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(Hemolyze));
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Comments));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(Finalized));
            if ((MIQS == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(MIQS));
            }
            if ((MIQS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(MIQS_ID));
            }
            if ((Status == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Status));
            }
            if ((ModifiedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ModifiedBy));
            }
            if ((ModifyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(ModifyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Available == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Available));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(Kidney));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Pancreas));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(SmallIntestine));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Liver));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(BoneMarrow));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Lung));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Heart));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(AddOrgan1));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(AddOrgan2));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(XM_Flow));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(Misc));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(QC));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(ABOTest));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Islet));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(PostTransplant));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(ABC_CDC));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(DR_CDC));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(ABC_DNA));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(DR_DNA));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Luminex));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(Fast_Screen));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(XM_CDC));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(Standard));
            if ((RackNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(RackNumber));
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(PRA_CL1));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(PRA_CL2));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(SA_CL1));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(SA_CL2));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(MixedBead));
            if ((QC_Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(QC_Comments));
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(NoQCIssues));
            if ((CreateBy == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(CreateBy));
            }
            if ((Auto_Luminex_Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Auto_Luminex_Comments));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Special_Handling));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Stat_ABC_DR));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Stat_SA_CL1));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Stat_SA_CL2));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Suppress_Luminex));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Mod_CL1));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Mod_CL2));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(Stat_Mod_CL1));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Stat_Mod_CL2));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Adsorb));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(EDTA));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Filter));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Dilution));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(Other));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Stat_ABC_Only));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(ABO_A1_Subtype_Test));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Expedited_Test));
            if ((AccessionNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(AccessionNumber));
            }
            this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(EDTAConfirm));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(AdsorbConfirm));
            if ((Original_LogNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_LogNumber));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> LogDateTime, 
                    string PatID, 
                    global::System.Nullable<global::System.DateTime> SampleDate, 
                    bool B, 
                    bool S, 
                    bool LN, 
                    bool SP, 
                    bool Cells, 
                    bool HLA_ABC, 
                    bool HLA_DR, 
                    bool ABS, 
                    bool NS, 
                    bool NSNC, 
                    bool XM_Auto, 
                    bool XM_Donor, 
                    bool XM_Final, 
                    bool Freeze, 
                    bool MLC, 
                    bool Hemolyze, 
                    string Comments, 
                    bool Finalized, 
                    string MIQS, 
                    string MIQS_ID, 
                    string Status, 
                    string ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifyDate, 
                    string Available, 
                    bool Kidney, 
                    bool Pancreas, 
                    bool SmallIntestine, 
                    bool Liver, 
                    bool BoneMarrow, 
                    bool Lung, 
                    bool Heart, 
                    bool AddOrgan1, 
                    bool AddOrgan2, 
                    bool XM_Flow, 
                    bool Misc, 
                    bool QC, 
                    bool ABOTest, 
                    bool Islet, 
                    bool PostTransplant, 
                    bool ABC_CDC, 
                    bool DR_CDC, 
                    bool ABC_DNA, 
                    bool DR_DNA, 
                    bool Luminex, 
                    bool Fast_Screen, 
                    bool XM_CDC, 
                    bool Standard, 
                    string RackNumber, 
                    bool PRA_CL1, 
                    bool PRA_CL2, 
                    bool SA_CL1, 
                    bool SA_CL2, 
                    bool MixedBead, 
                    string QC_Comments, 
                    bool NoQCIssues, 
                    string CreateBy, 
                    string Auto_Luminex_Comments, 
                    bool Special_Handling, 
                    bool Stat_ABC_DR, 
                    bool Stat_SA_CL1, 
                    bool Stat_SA_CL2, 
                    bool Suppress_Luminex, 
                    bool Mod_CL1, 
                    bool Mod_CL2, 
                    bool Stat_Mod_CL1, 
                    bool Stat_Mod_CL2, 
                    bool Adsorb, 
                    bool EDTA, 
                    bool Filter, 
                    bool Dilution, 
                    bool Other, 
                    bool Stat_ABC_Only, 
                    bool ABO_A1_Subtype_Test, 
                    bool Expedited_Test, 
                    string AccessionNumber, 
                    bool EDTAConfirm, 
                    bool AdsorbConfirm, 
                    string Original_LogNumber) {
            return this.Update(Original_LogNumber, LogDateTime, PatID, SampleDate, B, S, LN, SP, Cells, HLA_ABC, HLA_DR, ABS, NS, NSNC, XM_Auto, XM_Donor, XM_Final, Freeze, MLC, Hemolyze, Comments, Finalized, MIQS, MIQS_ID, Status, ModifiedBy, ModifyDate, Available, Kidney, Pancreas, SmallIntestine, Liver, BoneMarrow, Lung, Heart, AddOrgan1, AddOrgan2, XM_Flow, Misc, QC, ABOTest, Islet, PostTransplant, ABC_CDC, DR_CDC, ABC_DNA, DR_DNA, Luminex, Fast_Screen, XM_CDC, Standard, RackNumber, PRA_CL1, PRA_CL2, SA_CL1, SA_CL2, MixedBead, QC_Comments, NoQCIssues, CreateBy, Auto_Luminex_Comments, Special_Handling, Stat_ABC_DR, Stat_SA_CL1, Stat_SA_CL2, Suppress_Luminex, Mod_CL1, Mod_CL2, Stat_Mod_CL1, Stat_Mod_CL2, Adsorb, EDTA, Filter, Dilution, Other, Stat_ABC_Only, ABO_A1_Subtype_Test, Expedited_Test, AccessionNumber, EDTAConfirm, AdsorbConfirm, Original_LogNumber);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PatientsTableAdapter _patientsTableAdapter;
        
        private SamplesTableAdapter _samplesTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PatientsTableAdapter PatientsTableAdapter {
            get {
                return this._patientsTableAdapter;
            }
            set {
                this._patientsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SamplesTableAdapter SamplesTableAdapter {
            get {
                return this._samplesTableAdapter;
            }
            set {
                this._samplesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._patientsTableAdapter != null) 
                            && (this._patientsTableAdapter.Connection != null))) {
                    return this._patientsTableAdapter.Connection;
                }
                if (((this._samplesTableAdapter != null) 
                            && (this._samplesTableAdapter.Connection != null))) {
                    return this._samplesTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._patientsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._samplesTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(ClearMini dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._patientsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Patients.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._patientsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._samplesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Samples.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._samplesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(ClearMini dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._patientsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Patients.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._patientsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._samplesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Samples.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._samplesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(ClearMini dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._samplesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Samples.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._samplesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._patientsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Patients.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._patientsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(ClearMini dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._patientsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._patientsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._samplesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._samplesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._patientsTableAdapter != null)) {
                    revertConnections.Add(this._patientsTableAdapter, this._patientsTableAdapter.Connection);
                    this._patientsTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._patientsTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._patientsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._patientsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._patientsTableAdapter.Adapter);
                    }
                }
                if ((this._samplesTableAdapter != null)) {
                    revertConnections.Add(this._samplesTableAdapter, this._samplesTableAdapter.Connection);
                    this._samplesTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._samplesTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._samplesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._samplesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._samplesTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._patientsTableAdapter != null)) {
                    this._patientsTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._patientsTableAdapter]));
                    this._patientsTableAdapter.Transaction = null;
                }
                if ((this._samplesTableAdapter != null)) {
                    this._samplesTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._samplesTableAdapter]));
                    this._samplesTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591